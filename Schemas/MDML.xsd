<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Initials YYYY-MM-DD Version  Brief summary -->
<!-- ************************************** -->
<!-- ANH 2010-06-09 Version 0.5    Description-tag in tables and forms -->
<!-- ANH 2010-06-16 Version 0.6    Revised syntax for Actions-tag and subtags -->
<!-- MOK 2010-06-18 Version 0.7    Removed 'required' from foreignKey-attr on Reference-tag-->
<!-- ANH 2010-07-09 Version 0.8    Removed all-attr from Standard-tag and name-attr from PrintThis -->
<!-- ANH 2010-07-12 Version 0.9    PairHeader-tag -->
<!-- ANH 2010-07-12 Version 0.10   Revised Actions to <Exclude>(Override)<Order> format -->
<!-- RUG 2010-07-21 Version 0.11   Added conditionals for Grids -->
<!-- ANH 2010-07-23 Version 0.12   Introduced ActionRef types in the Order-tag for actions. -->
<!-- PEN 2010-08-09 Version 0.13   Introduced Report view and Report actions -->
<!-- MOK 2010-08-19 Version 0.14   defaultHidden-attr removed from Description- and (table)Field-tag  -->
<!-- ANH 2010-09-06 Version 0.15   XLinkAction and XLinkActionRef -->
<!-- ANH 2010-09-07 Version 0.16   Link-labels in tables and forms. Link-context style and four new link-related style properties. -->
<!-- ANH 2010-09-14 Version 0.17   Suggestions-attr on all field blocks and maxSuggestions-attr on Compact tag. -->
<!-- MOK 2010-09-23 Version 0.18   name-attr added to (table) Description-tag  
                                   required-attr replaced by visibility-attr on table-element-tags-->
<!-- ANH 2010-09-27 Version 0.19   UnitField-tag in tables. -->
<!-- PEN 2010-09-27 Version 0.20   Removed report info attributes. -->
<!-- ANH 2010-09-27 Version 0.21   Major cleanup after documentation task. See ticket: 13936 (pt.1 and 2) -->
<!-- PEN 2010-09-29 Version 0.22   Changed argument lists to semicolon seperated list of expressions. -->
<!-- ANH 2010-09-29 Version 0.23   Removed ref-attr from elements. -->
<!-- ANH 2010-09-29 Version 0.24   Rename ToolTip, @toolTip -> Tooltip, @tooltip. 
                                   Replaced linkTitle with template+arguments. -->
<!-- ANH 2010-10-04 Version 0.25   Removed XFontSizeType. 
                                   Replaced Full-, Slim-, and Unaligned-elements with appearance-attr. -->
<!-- ANH 2010-10-08 Version 0.26   Removed Field context style. Now the Field context style is default. -->
<!-- PEN 2010-10-14 Version 0.27   Report arguments can now use place holder arguments like query.
                                   Change report source and view to expressions. -->
<!-- ANH 2010-10-25 Version 0.28   Removed ruler attributes: name, ref, join, publishTabs, and equalizeIntervalFields. -->
<!-- ANH 2010-10-28 Version 0.29   Added open attr to grids. Changed XOpenType to XeOpenType. It no longer possible to write 1 and 0 as values. -->
<!-- JLP 2010-11-04 Version 0.30   Removed zipSize and citySize attributes from ZipCity element. Only one size can now be specified for the entire element. -->
<!-- ANH 2010-12-02 Version 0.31   Introduced XGridLabelStyle. -->
<!-- RUG 2010-12-27 Version 0.32   Introduced frame attribute on elements and groups, i.e., field-as-label. -->
<!-- ANH 2011-01-03 Version 0.33   Introduced DataSet-, Widget-, and revised Element-tags -->
<!-- RUG 2011-01-04 Version 0.34   Added conditional alternatives for links. -->
<!-- ANH 2011-01-17 Version 0.35   Introduced Dimension- and Region-tag for widget definitions. -->
<!-- UTS 2011-01-28 Version 0.36   Introduced Define block in Grid and list ref for Style. -->
<!-- UTS 2011-02-16 Version 0.37   Added new element PeriodYearRange. -->
<!-- UTS 2011-02-17 Version 0.38   Added possibility to reference Description element from Define block. -->
<!-- UTS 2011-03-22 Version 0.39   Added link specification to point directly to workspace, with the possibility of pane restrictiona and focus. -->
<!-- UTS 2011-03-22 Version 0.40   Added Scope to the Grid. -->
<!-- UTS 2011-05-03 Version 0.41   Changed Link Restriction title to be placeholder string. -->
<!-- AZK 2011-05-06 Version 0.42   Added type attribute to Field and other elements. -->
<!-- ANH 2011-05-09 Version 0.43   Semicolon as list-separator for grids and style-attributes. -->
<!-- ANH 2011-05-15 Version 0.44   Replaced '-quote with |-quote in all grid label cells. -->
<!-- RUG 2011-05-15 Version 0.45   Added syntactic support for parameterized actions. -->
<!-- RUG 2011-05-16 Version 0.46 X Added support for making a default configuration for an action in the global definitions file. -->
<!-- RUG 2011-06-17 Version 0.47 X Changed action parameter syntax. Now we support the choice between using the value and valueString attribute. -->
<!-- PEN 2011-06-29 Version 0.48 X Stripped extensions from icon references -->
<!-- JLP 2011-06-24 Version 0.49 . Introduced expressions for Openness and Mandatoryness. -->
<!-- UTS 2011-07-06 Version 0.50 . Introduced Triggers concept for fields, actions, links and wizard pages. -->
<!-- MOK 2011-27-07 Version 0.51 . Revert-action added. -->
<!-- UTS 2011-28-07 Version 0.52 . Create action ADD and INSERT added. -->
<!-- KSL 2011-29-07 Version 0.53 X Attribute standardFirst removed from Order -->
<!-- JLP 2011-08-09 Version 0.54 . New Trigger execution step: Refresh  -->
<!-- RUG 2011-08-09 Version 0.55 X Removed support for named rulers (reusing a ruler from another scope), explicit span values and the equalizeSpans attribute -->
<!-- AZK 2011-10-08 Version 0.56 . Data sources for charts added -->
<!-- UTS 2011-19-08 Version 0.57 X Update triggers syntax for fields, actions, links and wizard pages updated. -->
<!-- MOK 2011-22-08 Version 0.58 X Name for primary-fk is now 'primary' (used to be 'self'). 'with' and 'mount' are added as default names for these bindings. View-parameters are not directly after view-tag (Form,Table,Filter)   -->
<!-- ANH 2011-25-08 Version 0.59 . Context-style for Calendar added   -->
<!-- ANH 2011-29-08 Version 0.60 X Field-triggers de-supported -->

<!-- Indication after version number: . = backward compatible, X = NOT backward compatible, conversion needed -->
 
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
           xmlns="http://www.deltek.com/ns/mdml" 
           targetNamespace="http://www.deltek.com/ns/mdml"
           xmlns:jxb="http://java.sun.com/xml/ns/jaxb" 
           jxb:version="2.0" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified"
           xmlns:ai="http://jaxb.dev.java.net/plugin/if_insertion"
           jxb:extensionBindingPrefixes="ai">

  <xs:include schemaLocation="./Basics.xsd" />

  <!-- **************************************************************************** -->
  <!-- ****************************       ROOT       ****************************** -->
  <!-- **************************************************************************** -->

  <xs:element name="MDML" type="XMDML" />

  <xs:complexType name="XMDMLBase">
    <xs:choice>
      <xs:group ref="mdmlContent_g" minOccurs="0" />
    </xs:choice>
    <!-- minVersion is the minimum supported version -->
    <xs:attribute name="minVersion" type="VersionType" fixed="0.59" />
    <!-- maxVersion is the version of the current xsd (=current version) -->
    <xs:attribute name="maxVersion" type="VersionType" fixed="0.59" />
  </xs:complexType>

  <xs:simpleType name="MDMLVersionType">
    <xs:restriction base="VersionType">
      <xs:pattern value="0.5[9]" /> 
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="XMDML">
    <xs:complexContent>
      <xs:extension base="XMDMLBase">
        <xs:attribute name="version" type="MDMLVersionType" use="required" />
        <xs:attribute name="maxVersion" type="VersionType" use="prohibited" />
        <xs:attribute name="minVersion" type="VersionType" use="prohibited" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="mdmlContent_g">
    <xs:choice>
      <xs:group ref="mdmlMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="mdmlMembers_g">
    <xs:choice>
      <xs:group ref="layout_g" />
      <xs:group ref="global_g" />
      <xs:group ref="fragment_g" />
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- *************************   GLOBAL DEFINITIONS    ************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="global_g">
    <xs:choice>
      <xs:element name="Global" type="XGlobal" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGlobal">
    <xs:choice>
      <xs:group ref="globalContent_g" />
    </xs:choice>
    <xs:attribute name="style" type="XInvocationListType" />
  </xs:complexType>

  <xs:group name="globalContent_g">
    <xs:choice>
      <xs:group ref="globalMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="globalMembers_g">
    <xs:sequence>
      <xs:group ref="componentControl_g" minOccurs="0" />
      <xs:group ref="globalDefine_g" minOccurs="0" />
      <xs:group ref="actionsDefaultConfiguration_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ***************        ACTIONS DEFAULT CONFIGURATION         *************** -->
  <!-- **************************************************************************** -->

  <xs:group name="actionsDefaultConfiguration_g">
    <xs:choice>
      <xs:element name="Actions" type="XActionsConfiguration" />
    </xs:choice>
  </xs:group>

	<xs:complexType name="XActionsConfiguration">
		<xs:choice>
			<xs:group ref="actionsConfigurationContent_g" />
		</xs:choice>
	</xs:complexType>

  <xs:group name="actionsConfigurationContent_g">
    <xs:choice>
      <xs:group ref="actionsConfigurationMembers_g" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
  </xs:group>

  <xs:group name="actionsConfigurationMembers_g">
    <xs:sequence>
      <xs:element name="Action" type="XActionConfiguration" />
    </xs:sequence>
  </xs:group>

  <xs:complexType name="XActionConfiguration">
    <xs:complexContent>
      <xs:extension base="XAbstractAction">
        <xs:choice minOccurs="0">
          <xs:group ref="actionsConfigurationArgumentContent_g" />
        </xs:choice>
        <xs:attribute name="source"       type="QualifiedIdType" />
        <xs:attribute name="wizard"       type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="actionsConfigurationArgumentContent_g">
    <xs:choice>
      <xs:group ref="actionsConfigurationArgumentMembers_g" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
  </xs:group>

  <xs:group name="actionsConfigurationArgumentMembers_g">
    <xs:choice>
      <xs:group ref="actionArgument_g"/>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- *************************        FRAGMENT         ************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="fragment_g">
    <xs:choice>
      <xs:element name="Fragment" type="XFragment" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XFragment">
    <xs:choice>
      <xs:group ref="fragmentContent_g" />
    </xs:choice>
    <xs:attribute name="name" type="IdType" />
  </xs:complexType>

  <xs:group name="fragmentContent_g">
    <xs:choice>
      <xs:group ref="fragmentMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="fragmentMembers_g">
    <xs:choice>
      <xs:group ref="define_g" minOccurs="0" /> 
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************      LAYOUT      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="layout_g">
    <xs:choice>
      <xs:element name="Layout" type="XLayout" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XLayout">
    <xs:sequence>
      <xs:group ref="layoutContent_g" />
    </xs:sequence>
    <xs:attributeGroup ref="layout_ag" />
  </xs:complexType>

  <xs:group name="layoutContent_g">
    <xs:sequence>
      <xs:group ref="componentControl_g" minOccurs="0" />
      <xs:group ref="layoutMembers_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <xs:group name="componentControl_g">
    <xs:choice>
      <xs:group ref="style_g" minOccurs="0" maxOccurs="1" />
    </xs:choice>
  </xs:group>

  <xs:group name="layoutMembers_g">
    <xs:sequence>
      <xs:group ref="filterPane_g" minOccurs="0" />
      <xs:choice minOccurs="0">
        <xs:group ref="pane_g" />
        <xs:group ref="cardTablePanes_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="pane_g">
    <xs:choice>
      <xs:element name="Pane" type="XUpperPane" minOccurs="0" maxOccurs="1" />
    </xs:choice>
  </xs:group>

  <xs:group name="cardTablePanes_g">
    <xs:sequence>
      <xs:element name="UpperPane" type="XUpperPane" minOccurs="0" maxOccurs="1" />
      <xs:element name="LowerPane" type="XLowerPane" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>

  <xs:complexType name="XLayoutMember">
    <xs:sequence>
      <xs:group ref="define_g" />
      <xs:group ref="componentControl_g" />
      <xs:group ref="actions_g" minOccurs="0" />
    </xs:sequence>
    <xs:attributeGroup ref="rwPaneBasics_ag" />
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************      STYLES      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XBaseStyle">
    <xs:group ref="styleContent_g" />
    <xs:attributeGroup ref="style_ag" />
    <xs:attributeGroup ref="tableStyle_ag" />
    <xs:attribute name="ref"        type="XStyleList" />
    <xs:attribute name="name"       type="IdType" />
    <xs:attribute name="parameters" type="IdListType" />
  </xs:complexType>

  <!-- style attributes that are applicable to ALL kinds of styles -->
  <xs:attributeGroup name="style_ag">
    <xs:attribute name="condition"                  type="XBooleanExpressionType" />
    <xs:attribute name="size"                       type="XeSizeType" />
    <xs:attribute name="anchor"                     type="XAnchorType" />
    <xs:attribute name="fontName"                   type="TitleType" />
    <xs:attribute name="fontSize"                   type="XeSizeType" />
    <xs:attribute name="foregroundColor"            type="XColor" />
    <xs:attribute name="backgroundColor"            type="XColor" />
    <xs:attribute name="bold"                       type="XBooleanWithStandardType" />
    <xs:attribute name="italic"                     type="XBooleanWithStandardType" />
    <xs:attribute name="underline"                  type="XBooleanWithStandardType" />
    <xs:attribute name="justify"                    type="XJustificationType" />
    <xs:attribute name="zeroSuppression"            type="XBooleanWithStandardType" />
    <xs:attribute name="height"                     type="XPositiveIntegerWithStandardType" />
    <xs:attribute name="linkForegroundColor"        type="XColor" />
    <xs:attribute name="linkUnderline"              type="XBooleanWithStandardType" />
    <xs:attribute name="linkHoverForegroundColor"   type="XColor" />
    <xs:attribute name="linkHoverUnderline"         type="XBooleanWithStandardType" />
  </xs:attributeGroup>

  <!-- style attributes that are applicable to table styles -->
  <xs:attributeGroup name="tableStyle_ag">
    <xs:attribute name="rowHeight"      type="XeRowHeight" />
    <xs:attribute name="rowHeightMode"  type="XeRowHeightMode" />
  </xs:attributeGroup>

  <xs:group name="style_g">
    <xs:choice>
      <xs:element name="Style" type="XStyle" minOccurs="0">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="styleElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="XStyle">
    <xs:complexContent>
      <xs:restriction base="XBaseStyle">
        <xs:group ref="styleContent_g" />
        <xs:attribute name="name"         type="IdType"     use="prohibited" />
        <xs:attribute name="parameters"   type="IdListType" use="prohibited" />
        <xs:attribute name="rowHeight"                      use="prohibited" />
        <xs:attribute name="rowHeightMode"                  use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="styleDefinition_g">
    <xs:choice>
      <xs:element name="Style" type="XStyleDefinition" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XStyleDefinition">
    <xs:complexContent>
      <xs:restriction base="XBaseStyle">
        <xs:group ref="styleContent_g" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="styleContent_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="contexts" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="complexTypeStyle_g" />
        <xs:group ref="blockTypeStyle_g" />
        <xs:group ref="fieldTypeStyle_g" />
        <xs:element name="Switch" type="XSwitchStyle" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="complexTypeStyle_g">
    <xs:choice>
      <xs:element name="Table" type="XTableStyle" minOccurs="0" />
      <xs:element name="Group" type="XGroupStyle" minOccurs="0" />
    </xs:choice>
  </xs:group>

  <xs:group name="blockTypeStyle_g">
    <xs:choice>
      <xs:element name="Label"      type="XLabelStyle"      minOccurs="0" />
      <xs:element name="GridLabel"  type="XGridLabelStyle"  minOccurs="0" />
      <xs:element name="Link"       type="XLinkStyle"       minOccurs="0" />
      <xs:element name="Separator"  type="XSeparatorStyle"  minOccurs="0" />
    </xs:choice>
  </xs:group>

  <xs:group name="fieldTypeStyle_g">
    <xs:choice>
      <xs:element name="Boolean"    type="XBooleanStyle"    minOccurs="0" />
      <xs:element name="Integer"    type="XIntegerStyle"    minOccurs="0" />
      <xs:element name="Real"       type="XRealStyle"       minOccurs="0" />
      <xs:element name="Amount"     type="XAmountStyle"     minOccurs="0" />
      <xs:element name="String"     type="XStringStyle"     minOccurs="0" />
      <xs:element name="Multiline"  type="XMultilineStyle"  minOccurs="0" />
      <xs:element name="Date"       type="XDateStyle"       minOccurs="0" />
      <xs:element name="Calendar"   type="XCalendarStyle"   minOccurs="0" />
      <xs:element name="Time"       type="XTimeStyle"       minOccurs="0" />
      <xs:element name="Popup"      type="XPopupStyle"      minOccurs="0" />
      <xs:element name="Chart"      type="XChartStyle"      minOccurs="0" />      
    </xs:choice>
  </xs:group>

  <xs:complexType name="XInnerStyle">
    <xs:complexContent>
      <xs:restriction base="XBaseStyle">
        <xs:attribute name="ref"        use="prohibited" />
        <xs:attribute name="name"       use="prohibited" />
        <xs:attribute name="parameters" use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XInnerGeneralStyle">
    <xs:complexContent>
      <xs:restriction base="XInnerStyle">
        <xs:attribute name="rowHeight"      use="prohibited" />
        <xs:attribute name="rowHeightMode"  use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XInnerTableStyle">
    <xs:complexContent>
      <xs:restriction base="XInnerStyle">
        <xs:attribute name="condition"                  use="prohibited" />
        <xs:attribute name="size"                       use="prohibited" />
        <xs:attribute name="anchor"                     use="prohibited" />
        <xs:attribute name="fontName"                   use="prohibited" />
        <xs:attribute name="fontSize"                   use="prohibited" />
        <xs:attribute name="foregroundColor"            use="prohibited" />
        <xs:attribute name="backgroundColor"            use="prohibited" />
        <xs:attribute name="bold"                       use="prohibited" />
        <xs:attribute name="italic"                     use="prohibited" />
        <xs:attribute name="underline"                  use="prohibited" />
        <xs:attribute name="justify"                    use="prohibited" />
        <xs:attribute name="decimalCount"               use="prohibited" />
        <xs:attribute name="zeroSuppression"            use="prohibited" />
        <xs:attribute name="negativeNumberFormat"       use="prohibited" />
        <xs:attribute name="height"                     use="prohibited" />
        <xs:attribute name="linkForegroundColor"        use="prohibited" />
        <xs:attribute name="linkUnderline"              use="prohibited" />
        <xs:attribute name="linkForegroundColorOnHover" use="prohibited" />
        <xs:attribute name="linkUnderlineOnHover"       use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <!-- these types are only necessary to avoid the annoying JAXB< ? > element -->
  <xs:complexType name="XGroupStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTableStyle">
    <xs:complexContent>
      <xs:extension base="XInnerTableStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XLabelStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XGridLabelStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XLinkStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XSeparatorStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XBooleanStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XIntegerStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XRealStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XAmountStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XStringStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XMultilineStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDateStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XCalendarStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTimeStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPopupStyle">
    <xs:complexContent>
      <xs:extension base="XInnerGeneralStyle" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XSwitchStyle">
    <xs:choice maxOccurs="unbounded">
      <xs:annotation>
        <xs:appinfo>
          <jxb:property name="cases" />
        </xs:appinfo>
      </xs:annotation>
      <xs:group ref="case_g" />
    </xs:choice>
    <xs:attribute name="source" type="XFieldName" />
    <xs:attribute name="type"   type="XeSwitchType" fixed="calendar" />
  </xs:complexType>
  
  <xs:complexType name="XChartStyle">
    <xs:complexContent>    
      <xs:extension base="XInnerGeneralStyle">
      	<xs:group ref="paletteUse_g" />      	
      	<xs:attribute name="textOrientation" type="XeOrientation" default="horizontal" />
      	<xs:attribute name="chartOrientation" type="XeOrientation" default="vertical" />
      	<xs:attribute name="showLabels" type="BooleanType" default="false" />
      	<xs:attribute name="showLegend" type="BooleanType" default="false" />
      	<xs:attribute name="palette" type="IdType" />    	      	
      </xs:extension>		      
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="case_g">
    <xs:choice>
      <xs:element name="Case" type="XCase" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XCase">
    <xs:sequence>
      <xs:element name="Tooltip"  type="XTooltip" minOccurs="0" />
      <xs:element name="Style"    type="XStyle"   minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="char" type="CharacterType" use="required" />
  </xs:complexType>

  <xs:complexType name="XTooltip">
    <xs:choice />
    <xs:attribute name="text" type="TitleType" use="required" />
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************      RULERS      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="formComponentControl_g">
    <xs:sequence>
      <xs:group ref="ruler_g" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>

  <xs:group name="ruler_g">
    <xs:choice>
      <xs:element name="Ruler" type="XRuler">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="rulerElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="XRuler">
    <xs:attribute name="encloseAlignment"         type="BooleanType" />
    <xs:attribute name="encloseLabelAlignment"    type="BooleanType" />
    <xs:attribute name="encloseIntervalAlignment" type="BooleanType" />
    <xs:attribute name="fixLabelSize"             type="BooleanType" />
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************   DEFINITIONS    ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="define_g">
    <xs:choice>
      <xs:element name="Define" type="XDefine" minOccurs="0" maxOccurs="1" />
    </xs:choice>
  </xs:group>

  <xs:group name="globalDefine_g">
    <xs:choice>
      <xs:element name="Define" type="XGlobalDefine" minOccurs="0" maxOccurs="1" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XDefine">
    <xs:choice>
      <xs:group ref="defineContent_g" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="XGlobalDefine">
    <xs:complexContent>
      <xs:restriction base="XDefine">
        <xs:choice>
          <xs:group ref="globalDefineContent_g" />
        </xs:choice>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="defineContent_g">
    <xs:choice>
      <xs:group ref="defineMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="globalDefineContent_g">
    <xs:choice>
      <xs:group ref="globalDefineMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="defineMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="definitions" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="include_g" />
		    <xs:group ref="paletteDefinition_g" />
		    <xs:group ref="dataSourceDefinition_g" />    
        <xs:group ref="sharedDefineMembers_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="globalDefineMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="sharedDefineMembers_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="sharedDefineMembers_g">
    <xs:choice>
      <xs:group ref="function_g" />
      <xs:group ref="styleDefinition_g" />
      <xs:group ref="group_g" />
      <xs:group ref="columns_g" />
      <xs:group ref="dataSet_g" />
      <xs:group ref="widgetDefinition_g" />
      <xs:group ref="descriptionDefinition_g" />
      <xs:group ref="trigger_g" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="include_g">
    <xs:choice>
      <xs:element name="Include" type="XInclude" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XInclude">
    <xs:attribute name="fragment" type="IdType" use="required" />
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************      WIDGET      ****************************** -->
  <!-- **************************************************************************** -->
  
  <xs:group name="widgetUse_g">
    <xs:choice>
      <xs:element name="Widget" type="XWidgetUse">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="widgetElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>
  
  <xs:group name="widgetDefinition_g">
    <xs:choice>
      <xs:element name="Widget" type="XWidgetDefinition" /> 
    </xs:choice>
  </xs:group>
  
  <xs:group name="paletteDefinition_g">
    <xs:choice>
      <xs:element name="Palette" type="XPaletteDefinition" /> 
    </xs:choice>
  </xs:group>

  <xs:complexType name="XWidget" abstract="true">
    <xs:group ref="widgetContent_g" />
    <xs:attribute name="name"   type="IdType" />
    <xs:attribute name="source" type="XeCustomWidgetSource" />
    <xs:attribute name="ref"    type="IdType" />
    <xs:attribute name="style"  type="XInvocationListType" />
  </xs:complexType>
  
  <xs:complexType name="XWidgetUse">
    <xs:complexContent>
      <xs:restriction base="XWidget">
        <xs:group ref="widgetContent_g" />
        <xs:attribute name="name"   type="IdType" use="prohibited" />
        <xs:attribute name="source" type="XeCustomWidgetSource" use="optional" />
        <xs:attribute name="ref"    type="IdType" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XWidgetDefinition">
    <xs:complexContent>
      <xs:restriction base="XWidget">
        <xs:group ref="widgetContent_g" />
        <xs:attribute name="name"   type="IdType" use="required" />
        <xs:attribute name="source" type="XeCustomWidgetSource" use="required" />
        <xs:attribute name="ref"    type="IdType" use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="widgetContent_g">
    <xs:choice>
      <xs:group ref="widgetMembers_g" />    
    </xs:choice>
  </xs:group>

  <xs:group name="widgetMembers_g">
    <xs:sequence>
      <xs:group ref="componentControl_g" minOccurs="0" />
      <xs:group ref="dimension_g" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  
  <xs:group name="dimension_g">
    <xs:choice>
      <xs:element name="Dimension" type="XDimension" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XDimension">
    <xs:group ref="dimensionContent_g" />
    <xs:attribute name="start" type="DecimalType" />
    <xs:attribute name="end"   type="DecimalType" />
    <xs:attribute name="step"  type="DecimalType" />
    <xs:attribute name="style" type="XInvocationListType" />
  </xs:complexType>
  
  <xs:group name="dimensionContent_g">
    <xs:choice>
      <xs:group ref="dimensionMembers_g" />    
    </xs:choice>
  </xs:group>

  <xs:group name="dimensionMembers_g">
    <xs:sequence>
      <xs:group ref="componentControl_g" minOccurs="0" />
      <xs:group ref="region_g" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  
  <xs:group name="region_g">
    <xs:choice>
      <xs:element name="Region" type="XRegion" />
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XRegion">
    <xs:group ref="regionContent_g" />
    <xs:attribute name="start" type="DecimalType" />
    <xs:attribute name="end"   type="DecimalType" />
    <xs:attribute name="style" type="XInvocationListType" />
  </xs:complexType>
  
  <xs:group name="regionContent_g">
    <xs:choice>
      <xs:group ref="regionMembers_g" />    
    </xs:choice>
  </xs:group>

  <xs:group name="regionMembers_g">
    <xs:sequence>
      <xs:group ref="componentControl_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>
  
  <!-- **************************************************************************** -->
  <!-- ****************************     DATASET      ****************************** -->
  <!-- **************************************************************************** -->
  
  <xs:group name="dataSet_g">
    <xs:choice>
      <xs:element name="DataSet" type="XDataSet" />    
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XDataSet">
    <xs:group ref="dataSetContent_g" />
    <xs:attribute name="name"  type="IdType" />
    <xs:attribute name="value" type="XExpressionListType" />
    <xs:attribute name="type"  type="XeFieldType" />
  </xs:complexType>

  <xs:group name="dataSetContent_g">
    <xs:choice>
      <xs:group ref="dataSetMembers_g" />    
    </xs:choice>
  </xs:group>

  <xs:group name="dataSetMembers_g">
    <xs:sequence>
      <xs:group ref="dataSet_g" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  
  <!-- **************************************************************************** -->
  <!-- ****************************     FUNCTION     ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="function_g">
    <xs:choice>
      <xs:element name="Function" type="XFunction" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XFunction">
    <xs:sequence>
      <xs:group ref="functionContent_g" />
    </xs:sequence>
    <xs:attribute name="name"       type="IdType"       use="required" />
    <xs:attribute name="type"       type="XeFieldType"  default="boolean" />
    <xs:attribute name="value"      type="XExpressionType" />
    <xs:attribute name="parameters" type="IdListType" />
  </xs:complexType>

  <xs:group name="functionContent_g">
    <xs:sequence>
      <xs:group ref="functionMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="functionMembers_g">
    <xs:sequence>
      <xs:group ref="value_g" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>

  <xs:group name="value_g">
    <xs:choice>
      <xs:element name="Value" type="XValue">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="valueElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="XValue">
    <xs:simpleContent>
      <xs:extension base="XExpressionType">
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************      TRIGGER     ****************************** -->
  <!-- **************************************************************************** -->
  
  <xs:group name="trigger_g">
    <xs:sequence>
      <xs:element name="Trigger" type="XTrigger" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  
  <xs:complexType name="XTrigger">
    <xs:choice>
      <xs:group ref="triggerContent_g" />
   </xs:choice>
   <xs:attribute name="name" type="IdType" use="required" />
   <xs:attribute name="condition" type="XBooleanExpressionType" />
  </xs:complexType>
  
  <xs:group name="triggerContent_g">
    <xs:choice>
      <xs:group ref="triggerMembers_g" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="triggerMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="assign_g" />
        <xs:group ref="validation_g" />
        <xs:group ref="refreshstep_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
    
  <xs:group name="assign_g">
    <xs:choice>
      <xs:element name="Assign" type="XAssignment"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XAssignment">
    <xs:attribute name="source"      type="XFieldName"             use="required"/>
    <xs:attribute name="value"       type="XExpressionType"        use="optional" />
    <xs:attribute name="valueString" type="XPlaceholderStringType" use="optional" />
  </xs:complexType>
  
  <xs:group name="validation_g">
    <xs:choice>
      <xs:element name="Check" type="XValidation"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XValidation">
    <xs:choice>
      <xs:group ref="errorContent_g" />
    </xs:choice>
    <xs:attribute name="condition" type="XBooleanExpressionType" use="required" />
  </xs:complexType>
  
  <xs:group name="errorContent_g">
    <xs:choice>
      <xs:group ref="errorMembers_g" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="errorMembers_g">
    <xs:choice>
      <xs:element name="Error" type="XError"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XError">
    <xs:attributeGroup ref="templateValueRequired_ag" />
    <xs:attribute name="focusField" type="XFieldName" />
  </xs:complexType>

  <xs:group name="refreshstep_g">
    <xs:choice>
      <xs:element name="Refresh" type="XRefreshStep"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XRefreshStep">
    <xs:attribute name="type" type="XeRefreshType" use="required"/>
  </xs:complexType>
  
  <xs:simpleType name="XeRefreshType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="workspace"/>
    </xs:restriction>
  </xs:simpleType>
  
  
  <!-- **************************************************************************** -->
  <!-- ****************************      WIZARDS     ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="wizards_g">
    <xs:sequence>
      <xs:element name="Wizard" type="XWizard" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>

  <xs:complexType name="XWizard">
    <xs:sequence>
      <xs:element name="Description" type="XWizardDescription" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="descriptionElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
      <xs:group ref="wizardContent_g" />
    </xs:sequence>
    <xs:attribute name="title"        type="TitleType" />
    <xs:attribute name="description"  type="TitleType" />
    <xs:attribute name="name"         type="IdType" use="required" />
    <xs:attribute name="mandatory"    type="XBooleanExpressionType" default="true"/>
    <xs:attribute name="postTrigger"  type="IdType"/>
  </xs:complexType>

  <xs:group name="wizardContent_g">
    <xs:choice>
      <xs:group ref="wizardMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="wizardMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="wizardMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="wizardPage_g" />
        <xs:group ref="wizardScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="wizardPage_g">
    <xs:sequence>
      <xs:element name="Page" type="XWizardPage" />
    </xs:sequence>
  </xs:group>

  <xs:group name="wizardScope_g">
    <xs:choice>
      <!--  <xs:element name="Scope" type="XWizardScope" />  -->
      <xs:sequence>
        <xs:element name="If"     type="XWizardIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XWizardElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XWizardElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <xs:complexType name="XWizardPage">
    <xs:complexContent>
      <xs:extension base="XWizardMember">
        <xs:sequence>
          <xs:element name="Description" type="XWizardDescription" minOccurs="0" maxOccurs="1">
            <xs:annotation>
              <xs:appinfo>
                <jxb:property name="descriptionElement" />
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="name"         type="IdType"     use="optional" />
        <xs:attribute name="title"        type="TitleType"  use="required" />
        <xs:attribute name="description"  type="TitleType" />
        <xs:attribute name="form"         type="IdType"     use="required" />
        <xs:attribute name="mandatory"    type="XBooleanExpressionType" use="optional" />
        <xs:attribute name="preTrigger"   type="IdType" />
        <xs:attribute name="postTrigger"  type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************    UPPER PANE    ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XUpperPane">
    <xs:complexContent>
      <xs:extension base="XLayoutMember">
        <xs:sequence>
          <xs:group ref="wizards_g" />
          <xs:group ref="singlePaneContent_g" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="singlePaneContent_g">
    <xs:sequence>
      <xs:group ref="singlePaneMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="singlePaneMembers_g">
    <xs:choice>
      <xs:group ref="singlePaneLayouts_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="singlePaneLayouts_g">
    <xs:choice>
      <xs:group ref="singlePaneLayout_g" minOccurs="1" maxOccurs="unbounded" />
    </xs:choice>
  </xs:group>

  <xs:group name="singlePaneLayout_g">
    <xs:choice>
      <xs:group ref="commonPaneLayout_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="commonPaneLayout_g">
    <xs:choice>
      <xs:group ref="form_g" minOccurs="0" />
      <xs:group ref="browser_g" minOccurs="0" />
      <xs:group ref="report_g" minOccurs="0" />
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************    LOWER PANE    ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XLowerPane">
    <xs:complexContent>
      <xs:extension base="XLayoutMember">
        <xs:sequence>
          <xs:group ref="multiPaneContent_g" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="multiPaneContent_g">
    <xs:sequence>
      <xs:group ref="multiPaneMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="multiPaneMembers_g">
    <xs:choice>
      <xs:group ref="multiPaneLayouts_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="multiPaneLayouts_g">
    <xs:choice>
      <xs:group ref="multiPaneLayout_g" minOccurs="0" maxOccurs="unbounded" />
    </xs:choice>
  </xs:group>

  <xs:group name="multiPaneLayout_g">
    <xs:choice>
      <xs:group ref="commonPaneLayout_g" />
      <xs:element name="Table" type="XTable" />
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************    FILTER PANE   ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="filterPane_g">
    <xs:choice>
      <xs:element name="FilterPane" type="XFilterPane" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XFilterPane">
    <xs:complexContent>
      <xs:extension base="XLayoutMember">
        <xs:group ref="filterPaneContent_g" />
        <xs:attribute name="open" use="prohibited" fixed="never" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="filterPaneContent_g">
    <xs:choice>
      <xs:group ref="filterPaneMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="filterPaneMembers_g">
    <xs:choice>
      <xs:group ref="filterPaneLayouts_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="filterPaneLayouts_g">
    <xs:choice>
      <xs:group ref="filterPaneLayout_g" minOccurs="1" maxOccurs="unbounded" />
    </xs:choice>
  </xs:group>

  <xs:group name="filterPaneLayout_g">
    <xs:choice>
      <xs:group ref="filter_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="filter_g">
    <xs:choice>
      <xs:choice minOccurs="0">
        <xs:element name="Filter" type="XFilter" />
      </xs:choice>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************     ACTIONS      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="actions_g">
    <xs:choice>
      <xs:element name="Actions" type="XActions" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XActions">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="actionsContent_g" />
        </xs:choice>
        <xs:attribute name="all"            type="XBooleanExpressionType" default="false" />
        <xs:attribute name="collapseOrder"  type="IdListType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="actionsContent_g">
    <xs:choice>
      <xs:group ref="actionsMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="actionsMembers_g">
    <xs:sequence>
      <xs:group ref="actionsExclude_g"  minOccurs="0" maxOccurs="1" />
      <xs:group ref="actionsOverride_g" minOccurs="0" maxOccurs="1" />
      <xs:group ref="actionsOrder_g"    minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>
  
  <!-- **************************************************************************** -->
  <!-- ****************************     EXCLUDE      ****************************** -->
  <!-- **************************************************************************** -->
  
  <xs:group name="actionsExclude_g">
    <xs:choice>
      <xs:element name="Exclude" type="XExclude" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XExclude">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="excludeContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="excludeContent_g">
    <xs:choice>
      <xs:group ref="excludeMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="excludeMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="excludeMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="excludeElements_g" />
        <xs:group ref="excludeScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="excludeScope_g">
    <xs:sequence>
      <xs:element name="If"     type="XExcludeIf"     minOccurs="1" maxOccurs="1" />
      <xs:element name="ElseIf" type="XExcludeElseIf" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Else"   type="XExcludeElse"   minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>
  
  <xs:group name="excludeElements_g">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="Action" type="XAction" />
        <xs:element name="Add" type="XAdd" />
        <xs:element name="Insert" type="XInsert" />
        <xs:group ref="standardAction_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  
  <!-- **************************************************************************** -->
  <!-- ********************   ACTIONS: OVERRIDE PROPERTIES   ********************** -->
  <!-- **************************************************************************** -->

  <xs:group name="actionsOverride_g">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="overrideActions" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="actionElements_g" />
        <xs:group ref="actionsScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="actionElements_g">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="Action" type="XAction" />
        <xs:group ref="standardAction_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="XAbstractAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:attribute name="name"         type="IdType" />
        <xs:attribute name="icon"         type="XResourceIdType" />
        <xs:attribute name="title"        type="TitleType" />
        <xs:attribute name="appearance"   type="XeActionAppearance" />
        <xs:attribute name="tooltip"      type="TitleType" />  
        <xs:attribute name="preTrigger"   type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XAction">
    <xs:complexContent>
      <xs:extension base="XAbstractAction">
        <xs:choice minOccurs="0">
          <xs:group ref="actionArgumentContent_g" />
        </xs:choice>
        <xs:attribute name="source"       type="QualifiedIdType" />
        <xs:attribute name="wizard"       type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="actionArgumentContent_g">
    <xs:choice>
      <xs:group ref="actionArgumentMembers_g" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:group>

  <xs:group name="actionArgumentMembers_g">
    <xs:choice>
      <xs:group ref="actionArgument_g"/>
      <xs:group ref="actionArgumentScope_g"/>
    </xs:choice>
  </xs:group>

  <xs:group name="actionArgument_g">
    <xs:choice>
      <xs:element name="Argument" type="XActionArgument" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="actionArgumentScope_g">
    <xs:choice>
      <xs:sequence>
        <xs:element name="If"     type="XActionArgumentIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XActionArgumentElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XActionArgumentElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XActionArgument">
    <xs:attribute name="parameter"   type="IdType"                 use="required" />
    <xs:attribute name="value"       type="XExpressionType"        use="optional" />
    <xs:attribute name="valueString" type="XPlaceholderStringType" use="optional" />
  </xs:complexType>
  
  <xs:complexType name="XActionRefBase" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:attribute name="ref"          type="IdType"           use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XActionRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase">
        <xs:attribute name="ref"          type="IdType"           use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="actionsScope_g">
    <xs:sequence>
      <xs:element name="If"     type="XActionsIf"     minOccurs="1" maxOccurs="1" />
      <xs:element name="ElseIf" type="XActionsElseIf" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Else"   type="XActionsElse"   minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- *************************    STANDARD ACTIONS    *************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="standardAction_g">
    <xs:choice>
      <xs:element name="Create"     type="XCreate" />
      <xs:element name="Update"     type="XUpdate" />
      <xs:element name="Delete"     type="XDelete" />
      <xs:element name="Refresh"    type="XRefresh" />
      <xs:element name="Revert"     type="XRevert" />
      <xs:element name="Move"       type="XMove" />
      <xs:element name="Indent"     type="XIndent" />
      <xs:element name="Print"      type="XPrint" />
      <xs:element name="PrintThis"  type="XPrintThis" />
      <xs:element name="Report"     type="XReportAction" />
      <xs:element name="Link"       type="XLinkAction" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="standardActionRef_g">
    <xs:choice>
      <xs:element name="Create"     type="XCreateRef" />
      <xs:element name="Update"     type="XUpdateRef" />
      <xs:element name="Delete"     type="XDeleteRef" />
      <xs:element name="Refresh"    type="XRefreshRef" />
      <xs:element name="Revert"     type="XRevertRef" />
      <xs:element name="Move"       type="XMoveRef" />
      <xs:element name="Indent"     type="XIndentRef" />
      <xs:element name="Print"      type="XPrintRef" />
      <xs:element name="PrintThis"  type="XPrintThisRef" />
      <xs:element name="Report"     type="XReportActionRef" />
      <xs:element name="Link"       type="XLinkActionRef" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XStandardAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="XAbstractAction" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XCreate">
    <xs:complexContent>
      <xs:extension base="XStandardAction">
        <xs:group ref="createContent_g" minOccurs="0" />
        <xs:attribute name="wizard" type="IdType" />
        <xs:attribute name="initPostTrigger" type="IdType"  />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="createContent_g">
    <xs:choice>
      <xs:group ref="createMembers_g" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="createMembers_g">
    <xs:sequence>
      <xs:choice maxOccurs="2">
        <xs:group ref="append_g" />
        <xs:group ref="insert_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
    
  <xs:group name="insert_g">
    <xs:choice>
      <xs:element name="Insert" type="XInsert" />
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XInsert">
    <xs:complexContent>
      <xs:extension base="XAbstractCreateAction" />
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="append_g">
    <xs:choice>
      <xs:element name="Add" type="XAdd" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XAdd">
    <xs:complexContent>
      <xs:extension base="XAbstractCreateAction" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XAbstractCreateAction" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:attribute name="name" type="IdType" />
        <xs:attribute name="icon" type="XResourceIdType" />
        <xs:attribute name="title" type="TitleType" />
        <xs:attribute name="appearance" type="XeActionAppearance" />
        <xs:attribute name="tooltip" type="TitleType" />
        <xs:attribute name="postTrigger" type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
   
  <xs:complexType name="XCreateRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XUpdate">
    <xs:complexContent>
      <xs:extension base="XStandardAction"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XUpdateRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XDelete">
    <xs:complexContent>
      <xs:extension base="XStandardAction"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDeleteRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XRevert">
    <xs:complexContent>
      <xs:extension base="XStandardAction" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XRevertRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XRefresh">
    <xs:complexContent>
      <xs:extension base="XStandardAction" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XRefreshRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XMove">
    <xs:complexContent>
      <xs:extension base="XStandardAction" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XMoveRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XIndent">
    <xs:complexContent>
      <xs:extension base="XStandardAction" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XIndentRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPrint">
    <xs:complexContent>
      <xs:extension base="XStandardAction">
        <xs:attribute name="layout" type="OptIdType" />
        <xs:attribute name="wizard" type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XPrintRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPrintThis">
    <xs:complexContent>
      <xs:extension base="XStandardAction" />
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XPrintThisRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XReportAction">
    <xs:complexContent>
      <xs:extension base="XStandardAction">
        <xs:choice>
          <xs:group ref="reportQuery_g" minOccurs="0" />
        </xs:choice>  
        <xs:attributeGroup ref="report_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
 
   <xs:attributeGroup name="report_ag">
    <xs:attribute name="source"   type="XStringExpressionType" use="required"/>
    <xs:attribute name="view"     type="XStringExpressionType" default="''" />
    <xs:attribute name="output"   type="XeReportOutputType" default="html"/>
  </xs:attributeGroup>
 
  <xs:complexType name="XReportActionRef">
    <xs:complexContent>
      <xs:restriction base="XActionRefBase"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XLinkAction">
    <xs:complexContent>
      <xs:extension base="XStandardAction">
        <xs:group ref="url_g" minOccurs="0">
          <xs:annotation>
            <xs:appinfo>
              <jxb:property name="urlElement" />
            </xs:appinfo>
          </xs:annotation>
        </xs:group>
        <xs:attribute name="url" type="XUrlType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XLinkActionRef">
    <xs:complexContent>
      <xs:restriction base="XActionRef" />
    </xs:complexContent>
  </xs:complexType>  

  <!-- **************************************************************************** -->
  <!-- *************************      ACTION ORDER      *************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="actionsOrder_g">
    <xs:choice>
      <xs:element name="Order" type="XActionsOrder" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XActionsOrder">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:group ref="actionsOrderContent_g" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="actionsOrderContent_g">
    <xs:choice>
      <xs:group ref="actionsOrderMembers_g" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice> 
  </xs:group>

  <xs:group name="actionsOrderMembers_g">
    <xs:choice>
      <xs:group ref="standardActions_g" />
      <xs:group ref="actionRefElements_g" />
      <xs:group ref="actionGroup_g" />
      <xs:group ref="actionsOrderScope_g" />
    </xs:choice> 
  </xs:group>
  
  <xs:group name="actionRefElements_g">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="Action" type="XActionRef" />
        <xs:group   ref="standardActionRef_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  
  <xs:group name="standardActions_g">
    <xs:choice>
      <xs:element name="Standard" type="XStandardActions" />
    </xs:choice> 
  </xs:group>
  
  <xs:complexType name="XStandardActions">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:attribute name="title"   type="TitleType"/>
        <xs:attribute name="tooltip" type="TitleType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="actionsOrderScope_g">
    <xs:sequence>
      <xs:element name="If"     type="XActionsOrderIf"     minOccurs="1" maxOccurs="1" />
      <xs:element name="ElseIf" type="XActionsOrderElseIf" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Else"   type="XActionsOrderElse"   minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- *************************      ACTION GROUP      *************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="actionGroup_g">
    <xs:choice>
      <xs:element name="Group" type="XActionGroup" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XActionGroup">
    <xs:complexContent>
      <xs:extension base="XAbstractActionGroup">
        <xs:group ref="actionGroupContent_g" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XAbstractActionGroup" abstract="true">
    <xs:complexContent>
      <xs:extension base="XAbstractAction">
        <xs:attribute name="grouped"        type="XeGroupedType"  default="dynamic" />
        <xs:attribute name="collapseOrder"  type="IdListType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="actionGroupContent_g">
    <xs:choice>
      <xs:group ref="actionGroupMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="actionGroupMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="actionsGroupMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="actionRefElements_g" />
        <xs:group ref="actionsGroupScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="actionsGroupScope_g">
    <xs:sequence>
      <xs:element name="If"     type="XActionsGroupIf"      minOccurs="1" maxOccurs="1" />
      <xs:element name="ElseIf" type="XActionsGroupElseIf"  minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="Else"   type="XActionsGroupElse"    minOccurs="0" maxOccurs="1" />
    </xs:sequence>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************       VIEW       ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XView">
    <xs:sequence>
      <xs:group ref="viewContent_g" />
    </xs:sequence>
    <xs:attributeGroup ref="rwPaneInstance_ag" />
    <xs:attribute name="style" type="XInvocationListType" />
    <xs:attribute name="loginRules" type="XExpressionListType" />
  </xs:complexType>

  <xs:group name="viewContent_g">
    <xs:sequence>
      <xs:group ref="viewParameters_g"    minOccurs="0" />
      <xs:group ref="componentControl_g"  minOccurs="0" />
      <xs:group ref="actions_g"           minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <xs:group name="viewParameters_g">
    <xs:choice>
      <xs:element name="Parameters" type="XViewParameters" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XViewParameters">
    <xs:choice>
      <xs:group ref="viewParametersContent_g" />
    </xs:choice>
  </xs:complexType>

  <xs:group name="viewParametersContent_g">
    <xs:choice>
      <xs:group ref="viewParametersMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="viewParametersMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="parameters" />
          </xs:appinfo>
        </xs:annotation>
        <xs:element name="Parameter" type="XViewParameter" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:complexType name="XViewParameter">
    <xs:attribute name="name" type="IdType"       use="required" />
    <xs:attribute name="type" type="XeFieldType"  use="required" />
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************   COMMON TABLE   ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XBasicTable">
    <xs:complexContent>
      <xs:restriction base="XView">
        <xs:group ref="viewContent_g" />
        <xs:attributeGroup ref="rwPaneInstance_ag" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XCommonTable">
    <xs:complexContent>
      <xs:extension base="XBasicTable">
        <xs:sequence>
          <xs:group ref="controlBar_g"    minOccurs="0" />
          <xs:group ref="compactFilter_g" minOccurs="0" />
          <xs:group ref="columns_g"       minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************      FILTER      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XFilter">
    <xs:complexContent>
      <xs:restriction base="XCommonTable">
        <xs:sequence>
          <xs:group ref="filterContent_g" />
        </xs:sequence>
        <xs:attributeGroup ref="roPaneInstance_ag" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="filterContent_g">
    <xs:choice>
      <xs:group ref="filterMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="filterMembers_g">
    <xs:sequence>
      <xs:group ref="viewContent_g" />
      <xs:group ref="controlBar_g"    minOccurs="0" />
      <xs:group ref="compactFilter_g" minOccurs="0" />
      <xs:group ref="columns_g"       minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <xs:group name="compactFilter_g">
    <xs:choice>
      <xs:element name="Compact" type="XCompactFilter" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XCompactFilter">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:choice>
          <xs:group ref="compactFilterContent_g" />
        </xs:choice>
        <xs:attribute name="maxRows"        type="IntegerType" use="optional" />
        <xs:attribute name="maxSuggestions" type="IntegerType" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="compactFilterContent_g">
    <xs:choice>
      <xs:group ref="compactFilterMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="compactFilterMembers_g">
    <xs:choice>
      <xs:element name="Description" type="XCompactFilterDescription" />
      <xs:group ref="columns_g" />
      <xs:group ref="compactFilterScope_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="compactFilterScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XCompactFilterScope" />
      <xs:sequence>
        <xs:element name="If"     type="XCompactFilterIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XCompactFilterElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XCompactFilterElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>
  
  <!-- **************************************************************************** -->
  <!-- ****************************   CONTROL BAR    ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="controlBar_g">
    <xs:choice>
      <xs:element name="ControlBar" type="XControlBar" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XControlBar">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:choice>
          <xs:group ref="controlBarContent_g" minOccurs="0" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="controlBarContent_g">
    <xs:choice>
      <xs:group ref="controlBarMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="controlBarMembers_g">
    <xs:sequence>
      <xs:choice>
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="controlBarMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="selection_g" />
        <xs:group ref="controlBarScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="controlBarScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XControlBarScope" />
      <xs:sequence>
        <xs:element name="If"     type="XControlBarIf"      minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XControlBarElseIf"  minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XControlBarElse"    minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <xs:group name="selection_g">
    <xs:choice>
      <xs:element name="Selection" type="XSelection" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XSelection">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:sequence>
          <xs:group ref="restrictionExpr_g" minOccurs="0"/>
          <xs:group ref="selectionContent_g" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name"     type="IdType" />
        <xs:attribute name="title"    type="TitleType" />
        <xs:attribute name="default"  type="IdType" />
        <xs:attribute name="restriction" type="XExpressionType" default="true"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="selectionContent_g">
    <xs:choice>
      <xs:group ref="selectionMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="selectionMembers_g">
    <xs:sequence>
      <xs:choice maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="options" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="option_g" />
        <xs:group ref="selectionScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="selectionScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XSelectionScope" />
      <xs:sequence>
        <xs:element name="If"     type="XSelectionIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XSelectionElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XSelectionElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <xs:group name="option_g">
    <xs:choice>
      <xs:element name="Option" type="XOption" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XOption">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:choice>
          <xs:group ref="optionContent_g" />
        </xs:choice>
        <xs:attribute name="name"         type="IdType" />
        <xs:attribute name="title"        type="TitleType" use="required" />
        <xs:attribute name="restriction"  type="XExpressionType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="optionContent_g">
    <xs:sequence>
      <xs:group ref="restrictionExpr_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <xs:group name="restrictionExpr_g">
    <xs:choice>
      <xs:element name="Restriction" type="XRestrictionExpr">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="restrictionElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="XRestrictionExpr">
    <xs:simpleContent>
      <xs:extension base="XExpressionType" />
    </xs:simpleContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************       TABLE      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XTable">
    <xs:complexContent>
      <xs:restriction base="XCommonTable">
        <xs:choice>
          <xs:group ref="tableContent_g" />
        </xs:choice>
        <xs:attributeGroup ref="rwPaneInstance_ag" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="tableContent_g">
    <xs:sequence>
      <xs:group ref="tableMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="tableMembers_g">
    <xs:sequence>
      <xs:group ref="viewContent_g" />
      <xs:group ref="columns_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <xs:group name="columns_g">
    <xs:choice>
      <xs:element name="Columns" type="XColumns" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XColumns">
    <xs:complexContent>
      <xs:extension base="XCommonTableScopeProvider">
        <xs:choice>
          <xs:group ref="columnsContent_g" />
        </xs:choice>
        <xs:attribute name="name" type="IdType" />
        <xs:attribute name="ref" type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="columnsContent_g">
    <xs:sequence>
      <xs:group ref="columnsMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="columnsMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="columnsMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="basicElement_g" />
        <xs:group ref="columns_g" />
        <xs:group ref="columnsScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="columnsScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XColumnsScope" />
      <xs:sequence>
        <xs:element name="If"     type="XColumnsIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XColumnsElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XColumnsElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <xs:group name="basicElement_g">
    <xs:choice>
      <xs:element name="Field"        type="XTableField" />
      <xs:element name="UnitField"    type="XTableUnitField" />
      <xs:element name="Description"  type="XTableDescription" />
      <xs:element name="Link"         type="XTableLinkLabel" />
      <!--<xs:element name="LinkButton"   type="XTableLinkButton" />-->
    </xs:choice>
  </xs:group>

  <xs:complexType name="XBaseTableField" abstract="true">
    <xs:complexContent>
      <xs:extension base="XTableColumnsScopeProvider">
        <xs:attributeGroup ref="elementBasics_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="foreignKeySearch_ag" />
        <xs:attribute name="source"         type="XFieldName" />
        <xs:attribute name="visibility"     type="XeVisibilityType" default="visible" />
        <xs:attribute name="type"           type="XeGuiType" default="standard" />
<!--         <xs:attribute name="postTrigger"    type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTableField">
    <xs:complexContent>
      <xs:extension base="XBaseTableField"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XTableUnitField">
    <xs:complexContent>
      <xs:extension base="XBaseTableField">
        <xs:attribute name="unitSource"     type="XFieldName" />
        <xs:attribute name="unitTitle"      type="TitleType" />
        <xs:attribute name="unitPosition"   type="XUnitPositionType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XTableDescription">
    <xs:complexContent>
      <xs:extension base="XTableColumnsScopeProvider">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="templateValue_ag" />
        <xs:attribute name="name"       type="IdType" />
        <xs:attribute name="visibility" type="XeVisibilityType" default="visible"/>
        <xs:attribute name="ref"        type="IdType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTableLink" abstract="true">
    <xs:annotation>
      <xs:appinfo>
        <ai:interfaces check="false">jaxb.mdml.structure.XiLink</ai:interfaces>
      </xs:appinfo>
    </xs:annotation>  
    <xs:complexContent>
      <xs:extension base="XTableColumnsScopeProvider">
        <xs:group ref="linkContent_g" />
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="link_ag" />
        <xs:attribute name="name"         type="IdType" />
        <xs:attribute name="size"         type="XeSizeType" />
        <xs:attribute name="visibility"   type="XeVisibilityType" default="visible"/>
        <xs:attribute name="preTrigger"   type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTableLinkLabel">
    <xs:complexContent>
      <xs:extension base="XTableLink">
        <xs:sequence minOccurs="0">
          <xs:element name="Override"     type="XTableLinkLabelConditionalOverride"     minOccurs="1" maxOccurs="1" />
          <xs:element name="ElseOverride" type="XTableLinkLabelConditionalElseOverride" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XTableLinkLabelAlternative">
    <xs:complexContent>
      <xs:extension base="XTableLink" />
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTableLinkButton">
    <xs:complexContent>
      <xs:extension base="XTableLink">
        <xs:sequence minOccurs="0">
          <xs:element name="Override"     type="XTableLinkButtonConditionalOverride"     minOccurs="1" maxOccurs="1" />
          <xs:element name="ElseOverride" type="XTableLinkButtonConditionalElseOverride" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XTableLinkButtonAlternative">
    <xs:complexContent>
      <xs:extension base="XTableLink">
        <xs:attributeGroup ref="link_alternative_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ********************     TABLE LINK CONDITIONALS      ********************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XTableLinkConditionalScopeProvider" abstract="true">
  </xs:complexType>
  
  <!-- Link label conditionals -->

  <xs:complexType name="XTableLinkLabelConditionalScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XTableLinkConditionalScopeProvider">
        <xs:sequence>
          <xs:element name="Link" type="XTableLinkLabelAlternative" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XTableLinkLabelConditionalOverride">
    <xs:complexContent>
      <xs:extension base="XTableLinkLabelConditionalScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>

  <xs:complexType name="XTableLinkLabelConditionalElseOverride">
    <xs:complexContent>
      <xs:extension base="XTableLinkLabelConditionalScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>
  
  <!-- Link button conditionals -->

  <xs:complexType name="XTableLinkButtonConditionalScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XTableLinkConditionalScopeProvider">
        <xs:sequence>
          <xs:element name="LinkButton" type="XTableLinkButtonAlternative" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XTableLinkButtonConditionalOverride">
    <xs:complexContent>
      <xs:extension base="XTableLinkButtonConditionalScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>

  <xs:complexType name="XTableLinkButtonConditionalElseOverride">
    <xs:complexContent>
      <xs:extension base="XTableLinkButtonConditionalScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************     BROWSER      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="browser_g">
    <xs:choice>
      <xs:element name="Browser" type="XBrowser" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XBrowser">
    <xs:complexContent>
      <xs:extension base="XView">
        <xs:choice>
          <xs:group ref="browserContent_g" minOccurs="0" />
        </xs:choice>
        <xs:attributeGroup ref="browser_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="browser_ag">
    <xs:attribute name="javaScript" type="XBooleanExpressionType" default="true" />
  </xs:attributeGroup>

  <xs:group name="browserContent_g">
    <xs:choice>
      <xs:group ref="browserMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="browserMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="browserMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="browserControlBar_g" minOccurs="0" />
        <xs:group ref="url_g"               minOccurs="0" />
        <xs:group ref="browserScope_g"      minOccurs="0" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="browserScope_g">
    <xs:choice>
      <xs:sequence>
        <xs:element name="If"     type="XBrowserIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XBrowserElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XBrowserElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <xs:group name="browserControlBar_g">
    <xs:choice>
      <xs:element name="ControlBar" type="XBrowserControlBar" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XBrowserControlBar">
    <xs:complexContent>
      <xs:extension base="XBrowserScopeProvider">
        <xs:choice />
        <xs:attributeGroup ref="browserControlBar_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="browserControlBar_ag">
    <xs:attribute name="name"       type="IdType" />
    <xs:attribute name="navigation" type="XBooleanExpressionType" default="true" />
    <xs:attribute name="address"    type="XBooleanExpressionType" default="true" />
    <xs:attribute name="progress"   type="XBooleanExpressionType" default="true" />
    <xs:attribute name="status"     type="XBooleanExpressionType" default="false" />
  </xs:attributeGroup>

  <!-- **************************************************************************** -->
  <!-- ******************************       URL      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="url_g">
    <xs:choice>
      <xs:element name="Url" type="XUrl"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="XUrl">
    <xs:group ref="urlContent_g" />
    <xs:attribute name="name"   type="IdType" />
    <xs:attribute name="value"  type="XUrlType" />
  </xs:complexType>

  <xs:group name="urlContent_g">
    <xs:sequence>
      <xs:group ref="urlMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="urlMembers_g">
    <xs:sequence>
      <xs:group ref="value_g"     minOccurs="0" />
      <xs:group ref="urlQuery_g"  minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>

  <xs:group name="urlQuery_g">
    <xs:choice>
      <xs:element name="Query" type="XUrlQuery" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XUrlQuery">
    <xs:attribute name="field"      type="XQueryFieldType" />
    <xs:attribute name="value"      type="XPlaceholderStringType" use="required" />
    <xs:attribute name="arguments"  type="XExpressionListType" />
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************************     LINK    *********************************** -->
  <!-- **************************************************************************** -->

 <xs:group name="linkContent_g">
    <xs:sequence>
      <xs:group ref="linkMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="linkMembers_g">
    <xs:choice>
      <xs:group ref="url_g" minOccurs="0">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="urlElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:group>
      <xs:group ref="linkPath_g" minOccurs="0"></xs:group>
    </xs:choice>
  </xs:group>
  
  <xs:group name="linkPath_g">
   <xs:sequence>
      <xs:group ref="waypoint_g" minOccurs="0" maxOccurs="unbounded" />
      <xs:group ref="target_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>
          
  <xs:group name="waypoint_g">
    <xs:choice>
      <xs:element name="Waypoint" type="XWaypoint"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XWaypoint"> 
    <xs:complexContent> 
      <xs:extension base="XWaypointBase"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="target_g">
    <xs:choice>
      <xs:element name="Target" type="XTarget"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XTarget">
    <xs:complexContent> 
      <xs:extension base="XWaypointBase"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XWaypointBase" abstract="true">
    <xs:choice>
      <xs:group ref="waypointContent_g"/>
    </xs:choice>
    <xs:attribute name="pane" type="IdType" use="required"/>
  </xs:complexType>
  
  <xs:group name="waypointContent_g">
    <xs:choice>
      <xs:group ref="waypointMembers_g"/>
    </xs:choice>
  </xs:group>

  <xs:group name="waypointMembers_g">
    <xs:sequence>
      <xs:group ref="paneRestriction_g" minOccurs="0"/>
      <xs:group ref="paneFocus_g" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
  
  <xs:group name="paneRestriction_g">
    <xs:choice>
      <xs:element name="Restriction" type="XPaneRestriction"/>
    </xs:choice>
  </xs:group>
  
  <xs:group name="paneFocus_g">
    <xs:choice>
      <xs:element name="Focus" type="XPaneFocus"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XPaneRestriction">
    <xs:attributeGroup ref="templateValueRequired_ag" />
    <xs:attribute name="expression"  type="XExpressionType"  use="required"/>
  </xs:complexType>
  
  <xs:complexType name="XPaneFocus">
    <xs:choice>
      <xs:group ref="paneFocusContent_g"/>
    </xs:choice>
  </xs:complexType>

  <xs:group name="paneFocusContent_g">
    <xs:choice>
      <xs:group ref="paneFocusMembers_g"/>
    </xs:choice>
  </xs:group>

  <xs:group name="paneFocusMembers_g">
    <xs:sequence>
      <xs:group ref="match_g" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>

  <xs:group name="match_g">
    <xs:choice>
      <xs:element name="Match" type="XMatch"/>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XMatch">
    <xs:attribute name="field"  type="IdType"           use="required"/>
    <xs:attribute name="value"  type="XExpressionType"  use="required"/>
  </xs:complexType>
  
  <!-- **************************************************************************** -->
  <!-- ****************************     REPORT      ******************************* -->
  <!-- **************************************************************************** -->

  <xs:group name="report_g">
    <xs:choice>
      <xs:element name="Report" type="XReportView" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XReportView">
    <xs:complexContent>
      <xs:extension base="XView">
        <xs:choice>
          <xs:group ref="reportContent_g" minOccurs="0" />
        </xs:choice>
        <xs:attributeGroup ref="report_ag" />
        <xs:attribute name="autorun" type="XBooleanExpressionType" default="true"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="reportContent_g">
    <xs:choice>
      <xs:group ref="reportMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="reportMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="reportMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="reportControlBar_g" minOccurs="0" />
        <xs:group ref="reportQuery_g" minOccurs="0" />
        <xs:group ref="reportScope_g" minOccurs="0" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="reportScope_g">
    <xs:choice>
      <xs:sequence>
        <xs:element name="If"     type="XReportIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XReportElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XReportElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <xs:group name="reportControlBar_g">
    <xs:choice>
      <xs:element name="ControlBar" type="XReportControlBar" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="reportQuery_g">
    <xs:choice>
      <xs:element name="Query" type="XReportQuery" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XReportQuery">
    <xs:complexContent>
      <xs:extension base="XReportScopeProvider">
        <xs:group ref="reportArgumentContent_g"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="reportArgumentContent_g">
    <xs:choice>
      <xs:group ref="reportArgumentMembers_g" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:group>

  <xs:group name="reportArgumentMembers_g">
    <xs:choice>
      <xs:group ref="reportArgument_g"/>
      <xs:group ref="reportArgumentScope_g"/>
    </xs:choice>
  </xs:group>

  <xs:group name="reportArgument_g">
    <xs:choice>
      <xs:element name="Argument" type="XReportArgument" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="reportArgumentScope_g">
    <xs:choice>
<!--      <xs:element name="Scope"    type="XReportScope" />-->
      <xs:sequence>
        <xs:element name="If"     type="XReportArgumentIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XReportArgumentElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XReportArgumentElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>
  
  <xs:complexType name="XReportArgument">
    <xs:attribute name="parameter" type="XReportFieldType" use="required" />
    <xs:attribute name="value"       type="XExpressionType"        use="optional" />
    <xs:attribute name="valueString" type="XPlaceholderStringType" use="optional" />
  </xs:complexType>

  <xs:complexType name="XReportControlBar">
    <xs:complexContent>
      <xs:extension base="XReportScopeProvider">
        <xs:choice />
        <xs:attributeGroup ref="reportControlBar_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="reportControlBar_ag">
    <xs:attribute name="name"        type="IdType" />
    <xs:attribute name="status"      type="XBooleanExpressionType" default="true" />
    <xs:attribute name="progress"    type="XBooleanExpressionType" default="true" />
    <xs:attribute name="navigation"  type="XBooleanExpressionType" default="false" />
    <xs:attribute name="address"     type="XBooleanExpressionType" default="false" />
  </xs:attributeGroup>

  <!-- **************************************************************************** -->
  <!-- ****************************       FORM       ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="form_g">
    <xs:choice>
      <xs:element name="Form" type="XForm" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XForm">
    <xs:complexContent>
      <xs:extension base="XView">
        <xs:sequence>
          <xs:group ref="ruler_g"       minOccurs="0" maxOccurs="1" />
          <xs:group ref="formContent_g" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="formContent_g">
    <xs:sequence>
      <xs:group ref="formMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="formMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="formMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="formRow_g" />
        <xs:group ref="formColumn_g" />
        <xs:group ref="group_g" />
        <xs:group ref="formScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="formScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XFormScope" />
      <xs:sequence>
        <xs:element name="If"     type="XFormIf"      minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XFormElseIf"  minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XFormElse"    minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************     FORM ROW     ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="formRow_g">
    <xs:choice>
      <xs:element name="Row" type="XRow" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XRow">
    <xs:complexContent>
      <xs:extension base="XFormMemberScopeProvider">
        <xs:sequence>
          <xs:group ref="formRowContent_g" />
        </xs:sequence>
        <xs:attributeGroup ref="row_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="formRowContent_g">
    <xs:sequence>
      <xs:group ref="formRowMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="formRowMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="formRowMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="formColumn_g" />
        <xs:group ref="group_g" />
        <xs:group ref="formRowScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="formRowScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XFormRowScope" />
      <xs:sequence>
        <xs:element name="If"     type="XFormRowIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XFormRowElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XFormRowElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ***************************     FORM COLUMN    ***************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="formColumn_g">
    <xs:choice>
      <xs:element name="Column" type="XColumn" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XColumn">
    <xs:complexContent>
      <xs:extension base="XFormMemberScopeProvider">
        <xs:sequence>
          <xs:group ref="formColumnContent_g" />
        </xs:sequence>
        <xs:attributeGroup ref="column_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="formColumnContent_g">
    <xs:sequence>
      <xs:group ref="formColumnMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="formColumnMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="formColumnMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="formRow_g" />
        <xs:group ref="group_g" />
        <xs:group ref="formColumnScope_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="formColumnScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XFormColumnScope" />
      <xs:sequence>
        <xs:element name="If"     type="XFormColumnIf"      minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XFormColumnElseIf"  minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XFormColumnElse"    minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- *************************     SCOPE PROVIDERS    *************************** -->
  <!-- **************************************************************************** -->

  <!-- the general scope provider -->
  <xs:complexType name="XScopeProvider">
    <xs:choice>
      <xs:group ref="componentControl_g" minOccurs="0" maxOccurs="1" />
    </xs:choice>
    <xs:attribute name="style" type="XInvocationListType" />    
  </xs:complexType>

  <!-- the general pane scope -->
  <xs:complexType name="XPaneScopeProvider">
    <xs:complexContent>
      <xs:extension base="XScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general browser scope -->
  <xs:complexType name="XBrowserScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general report scope -->
  <xs:complexType name="XReportScopeProvider">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general form scope -->
  <xs:complexType name="XFormScopeProvider">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider">
        <xs:sequence>
          <xs:group ref="formComponentControl_g" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general scope inside a group inside a form -->
  <xs:complexType name="XFormGroupMemberScopeProvider">
    <xs:complexContent>
      <xs:extension base="XFormScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- scope constructions inside a group inside a form -->
  <xs:complexType name="XInnerScopeProvider">
    <xs:complexContent>
      <xs:extension base="XFormGroupMemberScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- non-scope constructions inside a group inside a form -->
  <xs:complexType name="XElementInnerScopeProvider">
    <xs:complexContent>
      <xs:extension base="XFormGroupMemberScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general scope outside a group but inside a form -->
  <xs:complexType name="XFormMemberScopeProvider">
    <xs:complexContent>
      <xs:extension base="XFormScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- scope constructions outside a group inside a form -->
  <xs:complexType name="XOuterScopeProvider">
    <xs:complexContent>
      <xs:extension base="XFormMemberScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- non-scope constructions outside a group inside a form -->
  <xs:complexType name="XElementOuterScopeProvider">
    <xs:complexContent>
      <xs:extension base="XFormMemberScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general action scope -->
  <xs:complexType name="XGeneralActionScopeProvider">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general common table scope for filter tables and regular tables -->
  <xs:complexType name="XCommonTableScopeProvider">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general common table scope for filter tables and regular tables -->
  <xs:complexType name="XTableColumnsScopeProvider">
    <xs:complexContent>
      <xs:extension base="XCommonTableScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- the general scope for the non-table parts of a filter -->
  <xs:complexType name="XFilterScopeProvider">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="if_ag">
    <xs:attribute name="condition"  type="XBooleanExpressionType"  use="required" />
    <xs:attribute name="default"    type="BooleanType"             default="false" />
  </xs:attributeGroup>

  <xs:attributeGroup name="elseIf_ag">
    <xs:attribute name="condition"  type="XBooleanExpressionType"  use="required" />
    <xs:attribute name="default"    type="BooleanType"             default="false" />
  </xs:attributeGroup>

  <!-- **************************************************************************** -->
  <!-- ****************************       GROUP      ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="group_g">
    <xs:choice>
      <xs:element name="Group" type="XGroup" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGroup">
    <xs:complexContent>
      <xs:extension base="XElementOuterScopeProvider">
        <xs:sequence>
          <xs:group ref="groupContent_g" />
        </xs:sequence>
        <xs:attributeGroup ref="formGroup_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:attributeGroup name="formGroup_ag">
    <xs:attribute name="name"       type="IdType" />
    <xs:attribute name="title"      type="TitleType" />
    <xs:attribute name="titleValue" type="XFieldName" />
    <xs:attribute name="ref"        type="IdType" />
    <xs:attributeGroup ref="groupCommon_ag" />
  </xs:attributeGroup>

  <xs:group name="groupContent_g">
    <xs:sequence>
      <xs:group ref="groupMembers_g" />
    </xs:sequence>
  </xs:group>

  <xs:group name="groupMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="groupMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="groupRow_g" />
        <xs:group ref="groupColumn_g" />
        <xs:group ref="groupScope_g" />
        <xs:group ref="formElement_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="groupScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XGroupScope" />
      <xs:sequence>
        <xs:element name="If"     type="XGroupIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XGroupElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XGroupElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************    GROUP ROW     ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="groupRow_g">
    <xs:choice>
      <xs:element name="Row" type="XGroupRow" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGroupRow">
    <xs:complexContent>
      <xs:extension base="XFormGroupMemberScopeProvider">
        <xs:choice>
          <xs:group ref="groupRowContent_g" />
        </xs:choice>
        <xs:attribute name="name"  type="IdType" />
        <xs:attributeGroup ref="groupCommon_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="groupRowContent_g">
    <xs:choice>
      <xs:group ref="groupRowMembers_g" />
    </xs:choice>
  </xs:group>

  <!-- It is possible to add either
       1) a SINGLE form element or 2) one or more columns and/or scopes/if/elseif/else -->
  <xs:group name="groupRowMembers_g">
    <xs:choice>
      <!-- it is currently NOT possible to nest the single element in an IF or similar. -->
      <xs:group ref="formElementSingleRow_g" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="groupRowSingleMember" />
          </xs:appinfo>
        </xs:annotation>
      </xs:group>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="groupRowMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="groupColumn_g" />
        <xs:group ref="groupRowScope_g" />
      </xs:choice>
    </xs:choice>
  </xs:group>

  <xs:group name="groupRowScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XGroupRowScope" />
      <xs:sequence>
        <xs:element name="If"     type="XGroupRowIf"      minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XGroupRowElseIf"  minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XGroupRowElse"    minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************  CUSTOM ELEMENT  ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="customElement_g">
    <xs:choice>
      <xs:element name="Element" type="XCustomElement" />
    </xs:choice>
  </xs:group>

  <!-- 
    ANH: We have two different kinds of custom elements. 1) Traditional
         custom elements which contain a set of nested tags outlining their
         block configuration. 2) The more advanced custom elements where
         the widget and optionally value attributes are specified. These two
         kinds are mutually exclusive, i.e., it is not possible to have both
         nested tags and the customElementWithWidget_ag attributes. This
         constraint can unfortunately not be enforced by the schema.
   -->
  <xs:complexType name="XCustomElement">
    <xs:complexContent>
      <xs:extension base="XElementInnerScopeProvider">
        <xs:group ref="customElementContent_g" />
        <xs:attributeGroup ref="elementBasics_ag" />
        <xs:attributeGroup ref="customElementWithWidget_ag" />                
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:attributeGroup name="customElementWithWidget_ag">
    <xs:attributeGroup ref="elementTitle_ag" />
    <xs:attribute name="value"      type="XExpressionType" />
    <xs:attribute name="type"       type="XeFieldType" default="integer"/>  <!-- (ANH) is this necessary? -->
    <xs:attribute name="source"     type="XFieldName" />
    <xs:attribute name="widget"     type="IdType" />
    <xs:attribute name="appearance" type="XeElementAppearance" default="normal" />
  </xs:attributeGroup>

  <xs:group name="customElementContent_g">
    <xs:choice>
      <xs:group ref="customElementWithBlocks_g" />
      <xs:group ref="customElementWithWidget_g" />      
    </xs:choice>
  </xs:group>

  <xs:group name="customElementWithBlocks_g">
    <xs:sequence>
      <xs:group ref="elementBlocks_g" minOccurs="0" />
    </xs:sequence>
  </xs:group>

  <xs:group name="elementBlocks_g">
    <xs:sequence>
      <xs:group   ref="labelElement_g" minOccurs="0" maxOccurs="1" />
      <xs:choice>
        <xs:group ref="elementBlock_g" minOccurs="1" maxOccurs="unbounded" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
  
  <xs:group name="customElementWithWidget_g">
    <xs:sequence>
      <xs:group ref="widgetUse_g" minOccurs="0" />
      <xs:choice>
				<xs:element name="DataSource" type="XDataSource" minOccurs="0" />
			</xs:choice>      
    </xs:sequence>    		
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ****************************   GROUP COLUMN   ****************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="groupColumn_g">
    <xs:choice>
      <xs:element name="Column" type="XGroupColumn" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGroupColumn">
    <xs:complexContent>
      <xs:extension base="XFormGroupMemberScopeProvider">
        <xs:sequence>
          <xs:group ref="groupColumnContent_g" />
        </xs:sequence>
        <xs:attribute name="name"   type="IdType" />
        <xs:attributeGroup ref="groupCommon_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="groupColumnContent_g">
    <xs:sequence>
      <xs:group ref="groupColumnMembers_g" />
    </xs:sequence>
  </xs:group>


  <xs:group name="groupColumnMembers_g">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="groupColumnMembers" />
          </xs:appinfo>
        </xs:annotation>
        <xs:group ref="groupRow_g" />
        <xs:group ref="groupColumnScope_g" />
        <xs:group ref="formElement_g" />
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="groupColumnScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XGroupColumnScope" />
      <xs:sequence>
        <xs:element name="If"     type="XGroupColumnIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XGroupColumnElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XGroupColumnElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- *****************    GROUP: SCOPE, IF, ELSEIF and ELSE     ***************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a group -->
  <xs:complexType name="XGroupScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XInnerScopeProvider">
        <xs:choice>
          <xs:group ref="groupContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a group -->
  <xs:complexType name="XGroupScope">
    <xs:complexContent>
      <xs:extension base="XGroupScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a group -->
  <xs:complexType name="XGroupIf">
    <xs:complexContent>
      <xs:extension base="XGroupScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a group -->
  <xs:complexType name="XGroupElseIf">
    <xs:complexContent>
      <xs:extension base="XGroupScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a group -->
  <xs:complexType name="XGroupElse">
    <xs:complexContent>
      <xs:extension base="XGroupScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ****************  GROUP ROW: SCOPE, IF, ELSEIF and ELSE   ****************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a group row -->
  <xs:complexType name="XGroupRowScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XInnerScopeProvider">
        <xs:choice>
          <xs:group ref="groupRowMembers_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a group row -->
  <xs:complexType name="XGroupRowScope">
    <xs:complexContent>
      <xs:extension base="XGroupRowScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a group row -->
  <xs:complexType name="XGroupRowIf">
    <xs:complexContent>
      <xs:extension base="XGroupRowScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a group row -->
  <xs:complexType name="XGroupRowElseIf">
    <xs:complexContent>
      <xs:extension base="XGroupRowScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a group row -->
  <xs:complexType name="XGroupRowElse">
    <xs:complexContent>
      <xs:extension base="XGroupRowScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ***************** GROUP COLUMN: SCOPE, IF, ELSEIF and ELSE ***************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a group column -->
  <xs:complexType name="XGroupColumnScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XInnerScopeProvider">
        <xs:choice>
          <xs:group ref="groupColumnContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a group column -->
  <xs:complexType name="XGroupColumnScope">
    <xs:complexContent>
      <xs:extension base="XGroupColumnScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a group column -->
  <xs:complexType name="XGroupColumnIf">
    <xs:complexContent>
      <xs:extension base="XGroupColumnScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a group column -->
  <xs:complexType name="XGroupColumnElseIf">
    <xs:complexContent>
      <xs:extension base="XGroupColumnScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a group column -->
  <xs:complexType name="XGroupColumnElse">
    <xs:complexContent>
      <xs:extension base="XGroupColumnScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *****************       BROWSER: IF, ELSEIF and ELSE      ****************** -->
  <!-- **************************************************************************** -->

  <!-- <If>, <ElseIf> and <Else> in a browser -->
  <xs:complexType name="XBrowserScopeProviderBase" abstract="true">
    <xs:complexContent>
      <xs:extension base="XBrowserScopeProvider">
        <xs:choice>
          <xs:group ref="browserContent_g" minOccurs="0" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a browser -->
  <xs:complexType name="XBrowserIf">
    <xs:complexContent>
      <xs:extension base="XBrowserScopeProviderBase">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a browser -->
  <xs:complexType name="XBrowserElseIf">
    <xs:complexContent>
      <xs:extension base="XBrowserScopeProviderBase">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a browser -->
  <xs:complexType name="XBrowserElse">
    <xs:complexContent>
      <xs:extension base="XBrowserScopeProviderBase" />
    </xs:complexContent>
  </xs:complexType>
  
  <!-- **************************************************************************** -->
  <!-- *****************   REPORT: SCOPE, IF, ELSEIF and ELSE   ****************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a report -->
  <xs:complexType name="XReportScopeProviderBase" abstract="true">
    <xs:complexContent>
      <xs:extension base="XReportScopeProvider">
        <xs:choice>
          <xs:group ref="reportContent_g" minOccurs="0" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a report -->
  <xs:complexType name="XReportIf">
    <xs:complexContent>
      <xs:extension base="XReportScopeProviderBase">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a report -->
  <xs:complexType name="XReportElseIf">
    <xs:complexContent>
      <xs:extension base="XReportScopeProviderBase">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a report -->
  <xs:complexType name="XReportElse">
    <xs:complexContent>
      <xs:extension base="XReportScopeProviderBase" />
    </xs:complexContent>
  </xs:complexType>
  
  <!-- ************************************************************************************* -->
  <!-- *****************   REPORT PARAMETER: SCOPE, IF, ELSEIF and ELSE   ****************** -->
  <!-- ************************************************************************************* -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a report -->
  <xs:complexType name="XReportArgumentScopeProviderBase" abstract="true">
    <xs:complexContent>
      <xs:extension base="XReportScopeProvider">
        <xs:choice>
          <xs:group ref="reportArgumentContent_g"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a report -->
  <xs:complexType name="XReportArgumentIf">
    <xs:complexContent>
      <xs:extension base="XReportArgumentScopeProviderBase">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a report -->
  <xs:complexType name="XReportArgumentElseIf">
    <xs:complexContent>
      <xs:extension base="XReportArgumentScopeProviderBase">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a report -->
  <xs:complexType name="XReportArgumentElse">
    <xs:complexContent>
      <xs:extension base="XReportArgumentScopeProviderBase" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *******************   FORM: SCOPE, IF, ELSEIF and ELSE   ******************* -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a form -->
  <xs:complexType name="XFormOuterScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XOuterScopeProvider">
        <xs:choice>
          <xs:group ref="formContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a form -->
  <xs:complexType name="XFormScope">
    <xs:complexContent>
      <xs:extension base="XFormOuterScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a form -->
  <xs:complexType name="XFormIf">
    <xs:complexContent>
      <xs:extension base="XFormOuterScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a form -->
  <xs:complexType name="XFormElseIf">
    <xs:complexContent>
      <xs:extension base="XFormOuterScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a form -->
  <xs:complexType name="XFormElse">
    <xs:complexContent>
      <xs:extension base="XFormOuterScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ******************* FORM ROW: SCOPE, IF, ELSEIF and ELSE ******************* -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a form row -->
  <xs:complexType name="XFormRowScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XOuterScopeProvider">
        <xs:choice>
          <xs:group ref="formRowContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a form row -->
  <xs:complexType name="XFormRowScope">
    <xs:complexContent>
      <xs:extension base="XFormRowScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a form row -->
  <xs:complexType name="XFormRowIf">
    <xs:complexContent>
      <xs:extension base="XFormRowScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a form row -->
  <xs:complexType name="XFormRowElseIf">
    <xs:complexContent>
      <xs:extension base="XFormRowScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a form row -->
  <xs:complexType name="XFormRowElse">
    <xs:complexContent>
      <xs:extension base="XFormRowScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ***************** FORM COLUMN: SCOPE, IF, ELSEIF and ELSE  ***************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a form column -->
  <xs:complexType name="XFormColumnScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XOuterScopeProvider">
        <xs:choice>
          <xs:group ref="formColumnContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a form column -->
  <xs:complexType name="XFormColumnScope">
    <xs:complexContent>
      <xs:extension base="XFormColumnScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a form column -->
  <xs:complexType name="XFormColumnIf">
    <xs:complexContent>
      <xs:extension base="XFormColumnScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a form column -->
  <xs:complexType name="XFormColumnElseIf">
    <xs:complexContent>
      <xs:extension base="XFormColumnScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a form column -->
  <xs:complexType name="XFormColumnElse">
    <xs:complexContent>
      <xs:extension base="XFormColumnScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ********************    WIZARD: IF, ELSEIF and ELSE     ******************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XWizardMember" abstract="true">
    <xs:complexContent>
      <xs:extension base="XPaneScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If>, <ElseIf> and <Else> in a wizard -->
  <xs:complexType name="XWizardScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XWizardMember">
        <xs:choice>
          <xs:group ref="wizardContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a wizard -->
  <xs:complexType name="XWizardIf">
    <xs:complexContent>
      <xs:extension base="XWizardScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a wizard -->
  <xs:complexType name="XWizardElseIf">
    <xs:complexContent>
      <xs:extension base="XWizardScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a wizard -->
  <xs:complexType name="XWizardElse">
    <xs:complexContent>
      <xs:extension base="XWizardScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ********************     EXCLUDE: IF, ELSEIF and ELSE    ******************* -->
  <!-- **************************************************************************** -->

  <!-- <If>, <ElseIf> and <Else> in an exclude -->
  <xs:complexType name="XExcludeScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="excludeContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in an exclude -->
  <xs:complexType name="XExcludeIf">
    <xs:complexContent>
      <xs:extension base="XExcludeScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in an exclude -->
  <xs:complexType name="XExcludeElseIf">
    <xs:complexContent>
      <xs:extension base="XExcludeScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in an exclude -->
  <xs:complexType name="XExcludeElse">
    <xs:complexContent>
      <xs:extension base="XExcludeScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ******************** ACTIONS: IF, ELSEIF and ELSE ******************* -->
  <!-- **************************************************************************** -->

  <!-- <If>, <ElseIf> and <Else> in an actions element (after exclude and standardActions) -->
  <xs:complexType name="XActionsScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="actionsOverride_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in an actions element (after exclude and standardActions) -->
  <xs:complexType name="XActionsIf">
    <xs:complexContent>
      <xs:extension base="XActionsScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in an actions element (after exclude and standardActions) -->
  <xs:complexType name="XActionsElseIf">
    <xs:complexContent>
      <xs:extension base="XActionsScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in an actions element (after exclude and standardActions) -->
  <xs:complexType name="XActionsElse">
    <xs:complexContent>
      <xs:extension base="XActionsScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *****************     ACTIONS ORDER: IF, ELSEIF and ELSE    **************** -->
  <!-- **************************************************************************** -->

  <!-- <If>, <ElseIf> and <Else> in an actions order tag -->
  <xs:complexType name="XActionsOrderScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="actionsOrderContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in an actions order tag -->
  <xs:complexType name="XActionsOrderIf">
    <xs:complexContent>
      <xs:extension base="XActionsOrderScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in an actions order tag -->
  <xs:complexType name="XActionsOrderElseIf">
    <xs:complexContent>
      <xs:extension base="XActionsOrderScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in an actions order tag -->
  <xs:complexType name="XActionsOrderElse">
    <xs:complexContent>
      <xs:extension base="XActionsOrderScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *****************     ACTIONS GROUP: IF, ELSEIF and ELSE    **************** -->
  <!-- **************************************************************************** -->

  <!-- <If>, <ElseIf> and <Else> in an actions group -->
  <xs:complexType name="XActionsGroupScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="actionGroupContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in an actions group -->
  <xs:complexType name="XActionsGroupIf">
    <xs:complexContent>
      <xs:extension base="XActionsGroupScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in an actions group -->
  <xs:complexType name="XActionsGroupElseIf">
    <xs:complexContent>
      <xs:extension base="XActionsGroupScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in an actions group -->
  <xs:complexType name="XActionsGroupElse">
    <xs:complexContent>
      <xs:extension base="XActionsGroupScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- ************************************************************************************* -->
  <!-- *****************   ACTION ARGUMENTS: SCOPE, IF, ELSEIF and ELSE   ****************** -->
  <!-- ************************************************************************************* -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in an action -->
  <xs:complexType name="XActionArgumentScopeProviderBase" abstract="true">
    <xs:complexContent>
      <xs:extension base="XGeneralActionScopeProvider">
        <xs:choice>
          <xs:group ref="reportArgumentContent_g"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in an action -->
  <xs:complexType name="XActionArgumentIf">
    <xs:complexContent>
      <xs:extension base="XActionArgumentScopeProviderBase">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in an action -->
  <xs:complexType name="XActionArgumentElseIf">
    <xs:complexContent>
      <xs:extension base="XActionArgumentScopeProviderBase">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in an action -->
  <xs:complexType name="XActionArgumentElse">
    <xs:complexContent>
      <xs:extension base="XActionArgumentScopeProviderBase" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ******************** COLUMNS: SCOPE, IF, ELSEIF and ELSE ******************* -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a columns -->
  <xs:complexType name="XColumnsScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XTableColumnsScopeProvider">
        <xs:choice>
          <xs:group ref="columnsMembers_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a columns -->
  <xs:complexType name="XColumnsScope">
    <xs:complexContent>
      <xs:extension base="XColumnsScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a columns -->
  <xs:complexType name="XColumnsIf">
    <xs:complexContent>
      <xs:extension base="XColumnsScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a columns -->
  <xs:complexType name="XColumnsElseIf">
    <xs:complexContent>
      <xs:extension base="XColumnsScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a columns -->
  <xs:complexType name="XColumnsElse">
    <xs:complexContent>
      <xs:extension base="XColumnsScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *****************  CONTROLBAR: SCOPE, IF, ELSEIF and ELSE   **************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a control bar -->
  <xs:complexType name="XControlBarScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:choice>
          <xs:group ref="controlBarContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a control bar -->
  <xs:complexType name="XControlBarScope">
    <xs:complexContent>
      <xs:extension base="XControlBarScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a control bar -->
  <xs:complexType name="XControlBarIf">
    <xs:complexContent>
      <xs:extension base="XControlBarScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a control bar -->
  <xs:complexType name="XControlBarElseIf">
    <xs:complexContent>
      <xs:extension base="XControlBarScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a control bar -->
  <xs:complexType name="XControlBarElse">
    <xs:complexContent>
      <xs:extension base="XControlBarScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *****************  SELECTION : SCOPE, IF, ELSEIF and ELSE   **************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a filter selection -->
  <xs:complexType name="XSelectionScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:choice>
          <xs:group ref="selectionContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a filter selection -->
  <xs:complexType name="XSelectionScope">
    <xs:complexContent>
      <xs:extension base="XSelectionScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a filter selection -->
  <xs:complexType name="XSelectionIf">
    <xs:complexContent>
      <xs:extension base="XSelectionScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a filter selection -->
  <xs:complexType name="XSelectionElseIf">
    <xs:complexContent>
      <xs:extension base="XSelectionScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a filter selection -->
  <xs:complexType name="XSelectionElse">
    <xs:complexContent>
      <xs:extension base="XSelectionScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ***************** COMPACT FILTER: SCOPE, IF, ELSEIF and ELSE *************** -->
  <!-- **************************************************************************** -->

  <!-- <Scope>, <If>, <ElseIf> and <Else> in a compact filter -->
  <xs:complexType name="XCompactFilterScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XFilterScopeProvider">
        <xs:choice>
          <xs:group ref="compactFilterContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> in a compact filter -->
  <xs:complexType name="XCompactFilterScope">
    <xs:complexContent>
      <xs:extension base="XCompactFilterScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- <If> in a compact filter -->
  <xs:complexType name="XCompactFilterIf">
    <xs:complexContent>
      <xs:extension base="XCompactFilterScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a compact filter -->
  <xs:complexType name="XCompactFilterElseIf">
    <xs:complexContent>
      <xs:extension base="XCompactFilterScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a compact filter -->
  <xs:complexType name="XCompactFilterElse">
    <xs:complexContent>
      <xs:extension base="XCompactFilterScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ********************               GRIDS                ******************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XGrid">
    <xs:complexContent>
      <xs:extension base="XFormGroupMemberScopeProvider">
        <xs:sequence>
          <xs:group ref="gridContent_g" />
        </xs:sequence>
        <xs:attributeGroup ref="grid_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="gridContent_g">
    <xs:choice>
      <xs:group ref="gridMembers_g" />
    </xs:choice>
  </xs:group>

  <xs:group name="gridMembers_g">
    <xs:sequence>
      <xs:group ref="define_g" minOccurs="0" />
      <xs:group ref="gridInnerMembers_g" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:group>
  
  <xs:group name="gridInnerMembers_g">
    <xs:annotation>
      <xs:appinfo>
        <jxb:property name="gridMembers" />
      </xs:appinfo>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="gridHeader_g" />
      <xs:group ref="gridRow_g" />
      <xs:group ref="gridFooter_g" />
      <xs:group ref="gridScope_g" />
    </xs:choice>
  </xs:group>
 
  <xs:group name="gridScope_g">
    <xs:choice>
      <xs:element name="Scope"    type="XGridScope" />
      <xs:sequence>
        <xs:element name="If"     type="XGridIf"     minOccurs="1" maxOccurs="1" />
        <xs:element name="ElseIf" type="XGridElseIf" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="Else"   type="XGridElse"   minOccurs="0" maxOccurs="1" />
      </xs:sequence>
    </xs:choice>
  </xs:group>   
      
  <xs:attributeGroup name="grid_ag">
    <xs:attributeGroup ref="groupCommon_ag" />
  </xs:attributeGroup>
    
  <xs:attributeGroup name="grid_basics_ag">
    <xs:attribute name="title"        type="TitleType"  use="optional" />
    <xs:attribute name="titleValue"   type="XFieldName" use="optional" />
    <xs:attribute name="titleSource"  type="XFieldName" use="optional" />
    <xs:attribute name="cells"        type="XGridCells" />
    <xs:attributeGroup ref="frameAttr_ag" />
  </xs:attributeGroup>

  <xs:group name="gridHeader_g">
    <xs:choice>
      <xs:element name="Header" type="XGridHeader" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGridLine">
    <xs:complexContent>
      <xs:extension base="XElementInnerScopeProvider">
        <!--
          FIXME:[anh] (from bla) We do not really want to allow rulers in grid lines, but if we want to keep the same structure than for elements,
          then we need it to be a scope element inner. I am not sure there is a way of restricting the super class elements, so we can restrict the
          use of <Ruler>
        -->
        <xs:attributeGroup ref="grid_basics_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XGridHeader">
    <xs:complexContent>
      <xs:extension base="XGridLine">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="gridRow_g">
    <xs:choice>
      <xs:element name="Row" type="XGridRow" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGridRow">
    <xs:complexContent>
      <xs:extension base="XGridLine">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="gridFooter_g">
    <xs:choice>
      <xs:element name="Footer" type="XGridFooter" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XGridFooter">
    <xs:complexContent>
      <xs:extension base="XGridLine">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *****************     GRIDS : SCOPE, IF, ELSEIF and ELSE     *************** -->
  <!-- **************************************************************************** -->

  <!-- <If>, <ElseIf> and <Else> in a compact filter -->
  <xs:complexType name="XGridScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XInnerScopeProvider">
        <xs:choice>
          <xs:group ref="gridContent_g" />
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Scope> -->
  <xs:complexType name="XGridScope">
    <xs:complexContent>
      <xs:extension base="XGridScopeProvider"/>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- <If> in a compact filter -->
  <xs:complexType name="XGridIf">
    <xs:complexContent>
      <xs:extension base="XGridScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <ElseIf> in a compact filter -->
  <xs:complexType name="XGridElseIf">
    <xs:complexContent>
      <xs:extension base="XGridScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- <Else> in a compact filter -->
  <xs:complexType name="XGridElse">
    <xs:complexContent>
      <xs:extension base="XGridScopeProvider" />
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- ************************   FORM ELEMENTS GROUPS   ************************** -->
  <!-- **************************************************************************** -->

  <xs:group name="formElement_g">
    <xs:choice>
      <xs:group ref="formElementSingleRow_g" />
      <xs:group ref="complexElement_g" />
    </xs:choice>
  </xs:group>

  <!-- handles the case where a single element is put in a group row -->
  <xs:group name="formElementSingleRow_g">
    <xs:choice>
      <xs:group ref="customElement_g" />
      <xs:group ref="labelElement_g" />
      <xs:group ref="linkElement_g" />
      <xs:group ref="fieldBasedElement_g" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="complexElement_g">
    <xs:choice>
      <xs:element name="Grid"                 type="XGrid" />
      <xs:element name="BooleanGroup"         type="XBooleanGroup" />
      <xs:element name="Calendar"             type="XCalendar" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="labelElement_g">
    <xs:choice>
      <xs:element name="Label"                type="XLabel" />
      <xs:element name="PairHeader"           type="XPairHeader" />
      <xs:element name="EmptyLabel"           type="XEmptyLabel" />
    </xs:choice>
  </xs:group>

  <xs:group name="linkElement_g">
    <xs:choice>
      <xs:element name="Link"                 type="XFormLinkLabel" />
  <!--<xs:element name="LinkButton"           type="XFormLinkButton" />-->
    </xs:choice>
  </xs:group>
  
  <xs:group name="fieldBasedElement_g">
    <xs:choice>
      <xs:element name="Field"                type="XFormField" />
      <xs:element name="Description"          type="XDescription" />
      <xs:element name="ZipCity"              type="XZipCity" />
      <xs:element name="ComboField"           type="XCombo" />
      <xs:element name="PeriodYear"           type="XPeriodYear" />
      <xs:element name="UnitField"            type="XUnitField" />
      <xs:element name="Pair"                 type="XPair" />
      <xs:element name="Reference"            type="XReference" />
      <xs:element name="Range"                type="XRange" />
      <xs:element name="Interval"             type="XInterval" />
      <xs:element name="UnitFieldInterval"    type="XUnitFieldInterval" />
      <xs:element name="PeriodYearInterval"   type="XPeriodYearInterval" />
      <xs:element name="PeriodYearRange"      type="XPeriodYearRange" />
      <xs:element name="ComboFieldInterval"   type="XComboInterval" />
      <xs:element name="Boolean"              type="XFullBoolean" />
    </xs:choice>
  </xs:group>
  
  <xs:group name="elementBlock_g">
    <xs:choice>
      <xs:element name="FieldBlock"           type="XDetachedField" />
      <xs:element name="PeriodYearBlock"      type="XDetachedPeriodYear" />
      <xs:element name="ComboFieldBlock"      type="XDetachedCombo" />
      <xs:element name="LabelBlock"           type="XDetachedLabel" />
      <xs:element name="ZipCityBlock"         type="XDetachedZipCity" />
    </xs:choice>
  </xs:group>

  <!-- **************************************************************************** -->
  <!-- ************************   FORM ELEMENTS TYPES    ************************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XDetachedElement">
    <xs:group ref="componentControl_g" minOccurs="0" maxOccurs="1" />
    <xs:attributeGroup ref="elementBasics_ag" />
  </xs:complexType>

  <xs:complexType name="XFixedElement">
    <xs:complexContent>
      <xs:extension base="XElementInnerScopeProvider">
        <xs:attributeGroup ref="elementBasics_ag" />
        <xs:attributeGroup ref="fixedElementBasics_ag" />
        <xs:attribute name="type"         type="XeGuiType" default="standard"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XFormField">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="foreignKeySearch_ag" />
        <xs:attribute name="source"       type="XFieldName" />
        <xs:attribute name="shadowTitle"  type="TitleType" />
<!--         <xs:attribute name="postTrigger"  type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XDescriptionBase">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="templateValue_ag" />
        <xs:attribute name="visibility"   type="XeVisibilityType" fixed="visible" />  
        <xs:attribute name="ref"          type="IdType"/>      
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XDescription">
    <xs:complexContent>
      <xs:restriction base="XDescriptionBase">
        <xs:group ref="descriptionContent_g"/> 
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="templateValue_ag" />
        <xs:attribute name="visibility"   type="XeVisibilityType" use="prohibited" />     
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:group name="descriptionContent_g">
    <xs:sequence>
      <xs:group ref="componentControl_g" />
      <xs:group ref="formComponentControl_g" />
    </xs:sequence>
  </xs:group>
  
  <xs:group name="descriptionDefinition_g">
    <xs:choice>
      <xs:element name="Description" type="XDescription" minOccurs="0" maxOccurs="1" />
    </xs:choice>
  </xs:group>
   
  <xs:complexType name="XCompactFilterDescription">
    <xs:complexContent>
      <xs:extension base="XDescription">
        <xs:attribute name="titleValue"   use="prohibited" />
        <xs:attribute name="titleSource"  use="prohibited" />
        <xs:attribute name="mandatory"    use="prohibited" />
        <xs:attribute name="open"         use="prohibited" />
        <xs:attribute name="size"         use="prohibited" />
        <xs:attribute name="ref"          use="prohibited" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XWizardDescription">
    <xs:complexContent>
      <xs:extension base="XDescription">
        <xs:attribute name="title"        use="prohibited" />
        <xs:attribute name="titleValue"   use="prohibited" />
        <xs:attribute name="titleSource"  use="prohibited" />
        <xs:attribute name="mandatory"    use="prohibited" />
        <xs:attribute name="open"         use="prohibited" />
        <xs:attribute name="size"         use="prohibited" />
        <xs:attribute name="ref"          use="prohibited" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XLabel">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="mandatory"  type="XBooleanExpressionType"  fixed="false"     use="prohibited" />
        <xs:attribute name="open"       type="XOpenType"               fixed="false"     use="prohibited" />
        <xs:attribute name="size"       type="XeSizeType"              fixed="standard"  use="prohibited" />
        <xs:attribute name="autoSubmit" type="BooleanType"                               use="prohibited" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XFormLink" abstract="true">
     <xs:annotation>
       <xs:appinfo>
          <ai:interfaces check="false">jaxb.mdml.structure.XiLink</ai:interfaces>
        </xs:appinfo>
    </xs:annotation>  
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:group ref="linkContent_g" />
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="link_ag" />
        <xs:attribute name="mandatory"    type="XBooleanExpressionType"  fixed="false"     use="prohibited" />
        <xs:attribute name="open"         type="XOpenType"               fixed="false"     use="prohibited" />
        <xs:attribute name="size"         type="XeSizeType"              fixed="standard"  use="prohibited" />
        <xs:attribute name="autoSubmit"   type="BooleanType"                               use="prohibited" />
        <xs:attribute name="preTrigger"  type="IdType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XFormLinkLabel">
    <xs:complexContent>
      <xs:extension base="XFormLink">
        <xs:sequence minOccurs="0">
          <xs:element name="Override"     type="XFormLinkLabelConditionalOverride"     minOccurs="1" maxOccurs="1" />
          <xs:element name="ElseOverride" type="XFormLinkLabelConditionalElseOverride" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XFormLinkLabelAlternative">
    <xs:complexContent>
      <xs:extension base="XFormLink"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XFormLinkButton">
    <xs:complexContent>
      <xs:extension base="XFormLink">
        <xs:sequence minOccurs="0">
          <xs:element name="Override"     type="XFormLinkButtonConditionalOverride"     minOccurs="1" maxOccurs="1" />
          <xs:element name="ElseOverride" type="XFormLinkButtonConditionalElseOverride" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XFormLinkButtonAlternative">
    <xs:complexContent>
      <xs:extension base="XFormLink"/>
    </xs:complexContent>
  </xs:complexType>
  
  <!-- **************************************************************************** -->
  <!-- *********************     FORM LINK CONDITIONALS      ********************** -->
  <!-- **************************************************************************** -->

  <xs:complexType name="XFormLinkConditionalScopeProvider" abstract="true">
  </xs:complexType>
  
  <!-- Link label conditionals -->

  <xs:complexType name="XFormLinkLabelConditionalScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XFormLinkConditionalScopeProvider">
        <xs:sequence>
          <xs:element name="Link" type="XFormLinkLabelAlternative" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XFormLinkLabelConditionalOverride">
    <xs:complexContent>
      <xs:extension base="XFormLinkLabelConditionalScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>

  <xs:complexType name="XFormLinkLabelConditionalElseOverride">
    <xs:complexContent>
      <xs:extension base="XFormLinkLabelConditionalScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>
  
  <!-- Link button conditionals -->

  <xs:complexType name="XFormLinkButtonConditionalScopeProvider" abstract="true">
    <xs:complexContent>
      <xs:extension base="XFormLinkConditionalScopeProvider">
        <xs:sequence>
          <xs:element name="LinkButton" type="XFormLinkButtonAlternative" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XFormLinkButtonConditionalOverride">
    <xs:complexContent>
      <xs:extension base="XFormLinkButtonConditionalScopeProvider">
        <xs:attributeGroup ref="if_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>

  <xs:complexType name="XFormLinkButtonConditionalElseOverride">
    <xs:complexContent>
      <xs:extension base="XFormLinkButtonConditionalScopeProvider">
        <xs:attributeGroup ref="elseIf_ag" />
      </xs:extension>
    </xs:complexContent>  
  </xs:complexType>

  <!--  -->
  
  <xs:complexType name="XPairHeader">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="firstTitle"         type="TitleType" />
        <xs:attribute name="firstTitleValue"    type="XFieldName" />
        <xs:attribute name="firstTitleSource"   type="XFieldName" />
        <xs:attribute name="secondTitle"        type="TitleType" />
        <xs:attribute name="secondTitleValue"   type="XFieldName" />
        <xs:attribute name="secondTitleSource"  type="XFieldName" />
        <xs:attribute name="mandatory"          type="XBooleanExpressionType"  fixed="false"     use="prohibited" />
        <xs:attribute name="open"               type="XOpenType"               fixed="false"     use="prohibited" />
        <xs:attribute name="size"               type="XeSizeType"              fixed="standard"  use="prohibited" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XCombo">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="firstField_ag" />
        <xs:attributeGroup ref="secondField_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XZipCity">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="zipField_ag" />
        <xs:attributeGroup ref="cityField_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPeriodYear">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="periodField_ag" />
        <xs:attributeGroup ref="yearField_ag" />
        <xs:attribute name="fieldSize"          type="XeSizeType" />
        <xs:attribute name="endPointsSeparator" type="XSeparatorType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XUnitField">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="source"           type="XFieldName" />
        <xs:attribute name="valueMandatory"   type="XBooleanExpressionType" />
        <xs:attribute name="valueOpen"        type="XOpenType" />
        <xs:attribute name="valueSize"        type="XeSizeType" />
        <xs:attribute name="shadowTitle"      type="TitleType"/>
        <xs:attribute name="unitSource"       type="XFieldName" />
        <xs:attribute name="unitMandatory"    type="XBooleanExpressionType" />
        <xs:attribute name="unitOpen"         type="XOpenType" />
        <xs:attribute name="unitSize"         type="XeSizeType" />
        <xs:attribute name="unitTitle"        type="TitleType" />
        <xs:attribute name="unitShadowTitle"  type="TitleType"/>
        <xs:attribute name="unitPosition"     type="XUnitPositionType" />
<!--         <xs:attribute name="postTrigger"      type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XEmptyLabel">
    <xs:complexContent>
      <xs:restriction base="XLabel">
        <xs:attribute name="title"        type="TitleType"  fixed="" />
        <xs:attribute name="titleValue"   type="TitleType"  use="prohibited" />
        <xs:attribute name="titleSource"  type="XFieldName" use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XInterval">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="firstField_ag" />
        <xs:attribute name="separator" type="XSeparatorType" />
        <xs:attributeGroup ref="lastField_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XRange">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="firstField_ag" />
        <xs:attribute name="separator" type="XSeparatorType" />
        <xs:attributeGroup ref="lastField_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPair">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="firstField_ag" />
        <xs:attributeGroup ref="secondField_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XReference">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attribute name="foreignKey" type="XFieldName" />
        <xs:attributeGroup ref="keyField_ag" />
        <xs:attributeGroup ref="descriptionField_ag" />
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XCalendar">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="source"         type="XFieldName" use="required" />
        <xs:attribute name="size"           type="XeSizeType" use="prohibited" fixed="standard" />
        <xs:attribute name="inputField"     type="BooleanType" />
        <xs:attribute name="autoSelection"  type="BooleanType" />
<!--         <xs:attribute name="postTrigger"    type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="XUnitFieldInterval">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="firstSource"           type="XFieldName" />
        <xs:attribute name="firstValueMandatory"   type="XBooleanExpressionType" />
        <xs:attribute name="firstValueOpen"        type="XOpenType" />
        <xs:attribute name="firstValueSize"        type="XeSizeType" />
        <xs:attribute name="firstShadowTitle"      type="TitleType" />
        <xs:attribute name="lastSource"            type="XFieldName" />
        <xs:attribute name="lastValueMandatory"    type="XBooleanExpressionType" />
        <xs:attribute name="lastValueOpen"         type="XOpenType" />
        <xs:attribute name="lastValueSize"         type="XeSizeType" />
        <xs:attribute name="lastShadowTitle"       type="TitleType" />
        <xs:attribute name="firstUnitSource"       type="XFieldName" />
        <xs:attribute name="firstUnitMandatory"    type="XBooleanExpressionType" />
        <xs:attribute name="firstUnitOpen"         type="XOpenType" />
        <xs:attribute name="firstUnitTitle"        type="TitleType" />
        <xs:attribute name="firstUnitSize"         type="XeSizeType" />
        <xs:attribute name="firstUnitShadowTitle"  type="TitleType" />
        <xs:attribute name="lastUnitSource"        type="XFieldName" />
        <xs:attribute name="lastUnitMandatory"     type="XBooleanExpressionType" />
        <xs:attribute name="lastUnitOpen"          type="XOpenType" />
        <xs:attribute name="lastUnitTitle"         type="TitleType" />
        <xs:attribute name="lastUnitSize"          type="XeSizeType" />
        <xs:attribute name="lastUnitShadowTitle"   type="TitleType" />
        <xs:attribute name="separator"             type="XSeparatorType" />
        <xs:attribute name="unitPosition"          type="XUnitPositionType" /> 
<!--         <xs:attribute name="firstValuePostTrigger" type="IdType" /> -->
<!--         <xs:attribute name="lastValuePostTrigger"  type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPeriodYearInterval">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="firstPeriodField_ag" />
        <xs:attributeGroup ref="lastPeriodField_ag" />
        <xs:attributeGroup ref="firstYearField_ag" />
        <xs:attributeGroup ref="lastYearField_ag" />
        <xs:attribute name="separator"          type="XSeparatorType" />
        <xs:attribute name="endPointsSeparator" type="XSeparatorType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XPeriodYearRange">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="firstPeriodField_ag" />
        <xs:attributeGroup ref="lastPeriodField_ag" />
        <xs:attributeGroup ref="firstYearField_ag" />
        <xs:attributeGroup ref="lastYearField_ag" />
        <xs:attribute name="separator"          type="XSeparatorType" />
        <xs:attribute name="endPointsSeparator" type="XSeparatorType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XComboInterval">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attributeGroup ref="firstFirstField_ag" />
        <xs:attributeGroup ref="firstSecondField_ag" />
        <xs:attributeGroup ref="lastFirstField_ag" />
        <xs:attributeGroup ref="lastSecondField_ag" />
        <xs:attribute name="separator" type="XSeparatorType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XBooleanGroup">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:group ref="boolean_g" />
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="size" type="XeSizeType" fixed="standard" use="prohibited" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="boolean_g">
    <xs:choice>
      <xs:element name="Boolean" type="XBoolean" minOccurs="1" maxOccurs="unbounded" />
    </xs:choice>
  </xs:group>

  <xs:complexType name="XBooleanBase" abstract="true">
    <xs:complexContent>
      <xs:extension base="XFixedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
        <xs:attribute name="source"         type="XFieldName" />
<!--         <xs:attribute name="postTrigger"    type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XBoolean">
    <xs:complexContent>
      <xs:restriction base="XBooleanBase">
        <xs:attribute name="appearance"                               fixed="normal" use="prohibited" />
        <xs:attribute name="mandatory"  type="XBooleanExpressionType" fixed="false"  use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XFullBoolean">
    <xs:complexContent>
      <xs:restriction base="XBooleanBase">
        <xs:attribute name="appearance" type="XeElementAppearance"    default="maximized" />
        <xs:attribute name="mandatory"  type="XBooleanExpressionType" fixed="false" use="prohibited" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDetachedField">
    <xs:complexContent>
      <xs:extension base="XDetachedElement">
        <xs:attribute name="source"         type="XFieldName" />
<!--         <xs:attribute name="postTrigger"    type="IdType" /> -->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDetachedPeriodYear">
    <xs:complexContent>
      <xs:extension base="XDetachedElement">
        <xs:attributeGroup ref="periodField_ag" />
        <xs:attributeGroup ref="yearField_ag" />
        <xs:attribute name="endPointsSeparator" type="XSeparatorType" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDetachedCombo">
    <xs:complexContent>
      <xs:extension base="XDetachedElement">
        <xs:attributeGroup ref="firstField_ag" />
        <xs:attributeGroup ref="secondField_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDetachedLabel">
    <xs:complexContent>
      <xs:extension base="XDetachedElement">
        <xs:attributeGroup ref="elementTitle_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="XDetachedZipCity">
    <xs:complexContent>
      <xs:extension base="XDetachedElement">
        <xs:attributeGroup ref="zipField_ag" />
        <xs:attributeGroup ref="cityField_ag" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- **************************************************************************** -->
  <!-- *************************   COMMON ATTRIBUTES    *************************** -->
  <!-- **************************************************************************** -->

  <xs:attributeGroup name="firstField_ag">
    <xs:attribute name="firstSource"        type="XFieldName" />
    <xs:attribute name="firstOpen"          type="XOpenType" />
    <xs:attribute name="firstMandatory"     type="XBooleanExpressionType" />
    <xs:attribute name="firstSize"          type="XeSizeType" />
    <xs:attribute name="firstSearchLayout"  type="IdType" />
    <xs:attribute name="firstSearchView"    type="IdType" />
    <xs:attribute name="firstSearchOption"  type="IdType" />
    <xs:attribute name="firstSuggestions"   type="XeSuggestionsType" />
    <xs:attribute name="firstShadowTitle"   type="TitleType" />
    <xs:attribute name="firstType"   		    type="XeGuiType" />
<!--     <xs:attribute name="firstPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="secondField_ag">
    <xs:attribute name="secondSource"       type="XFieldName" />
    <xs:attribute name="secondOpen"         type="XOpenType" />
    <xs:attribute name="secondMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="secondSize"         type="XeSizeType" />
    <xs:attribute name="secondSearchLayout" type="IdType" />
    <xs:attribute name="secondSearchView"   type="IdType" />
    <xs:attribute name="secondSearchOption" type="IdType" />
    <xs:attribute name="secondSuggestions"  type="XeSuggestionsType" />
    <xs:attribute name="secondShadowTitle"  type="TitleType" />
    <xs:attribute name="secondType"   		  type="XeGuiType" />
<!--     <xs:attribute name="secondPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="lastField_ag">
    <xs:attribute name="lastSource"         type="XFieldName" />
    <xs:attribute name="lastOpen"           type="XOpenType" />
    <xs:attribute name="lastMandatory"      type="XBooleanExpressionType" />
    <xs:attribute name="lastSize"           type="XeSizeType" />
    <xs:attribute name="lastSearchLayout"   type="IdType" />
    <xs:attribute name="lastSearchView"     type="IdType" />
    <xs:attribute name="lastSearchOption"   type="IdType" />
    <xs:attribute name="lastSuggestions"    type="XeSuggestionsType" />
    <xs:attribute name="lastShadowTitle"    type="TitleType" />
    <xs:attribute name="lastType"   		    type="XeGuiType" />
<!--     <xs:attribute name="lastPostTrigger"    type="IdType"/> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="firstFirstField_ag">
    <xs:attribute name="firstFirstSource"       type="XFieldName" />
    <xs:attribute name="firstFirstOpen"         type="XOpenType" />
    <xs:attribute name="firstFirstMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="firstFirstSize"         type="XeSizeType" />
    <xs:attribute name="firstFirstSearchLayout" type="IdType" />
    <xs:attribute name="firstFirstSearchView"   type="IdType" />
    <xs:attribute name="firstFirstSearchOption" type="IdType" />
    <xs:attribute name="firstFirstSuggestions"  type="XeSuggestionsType" />
    <xs:attribute name="firstFirstShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="firstFirstPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="firstSecondField_ag">
    <xs:attribute name="firstSecondSource"        type="XFieldName" />
    <xs:attribute name="firstSecondOpen"          type="XOpenType" />
    <xs:attribute name="firstSecondMandatory"     type="XBooleanExpressionType" />
    <xs:attribute name="firstSecondSize"          type="XeSizeType" />
    <xs:attribute name="firstSecondSearchLayout"  type="IdType" />
    <xs:attribute name="firstSecondSearchView"    type="IdType" />
    <xs:attribute name="firstSecondSearchOption"  type="IdType" />
    <xs:attribute name="firstSecondSuggestions"   type="XeSuggestionsType" />
    <xs:attribute name="firstSecondShadowTitle"   type="TitleType" />
<!--     <xs:attribute name="firstSecondPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="lastFirstField_ag">
    <xs:attribute name="lastFirstSource"        type="XFieldName" />
    <xs:attribute name="lastFirstOpen"          type="XOpenType" />
    <xs:attribute name="lastFirstMandatory"     type="XBooleanExpressionType" />
    <xs:attribute name="lastFirstSize"          type="XeSizeType" />
    <xs:attribute name="lastFirstSearchLayout"  type="IdType" />
    <xs:attribute name="lastFirstSearchView"    type="IdType" />
    <xs:attribute name="lastFirstSearchOption"  type="IdType" />
    <xs:attribute name="lastFirstSuggestions"   type="XeSuggestionsType" />
    <xs:attribute name="lastFirstShadowTitle"   type="TitleType" />
<!--     <xs:attribute name="lastFirstPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="lastSecondField_ag">
    <xs:attribute name="lastSecondSource"       type="XFieldName" />
    <xs:attribute name="lastSecondOpen"         type="XOpenType" />
    <xs:attribute name="lastSecondMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="lastSecondSize"         type="XeSizeType" />
    <xs:attribute name="lastSecondSearchLayout" type="IdType" />
    <xs:attribute name="lastSecondSearchView"   type="IdType" />
    <xs:attribute name="lastSecondSearchOption" type="IdType" />
    <xs:attribute name="lastSecondSuggestions"  type="XeSuggestionsType" />
    <xs:attribute name="lastSecondShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="lastSecondPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="zipField_ag">
    <xs:attribute name="zipSource"        type="XFieldName" />
    <xs:attribute name="zipOpen"          type="XOpenType" />
    <xs:attribute name="zipMandatory"     type="XBooleanExpressionType" />
    <xs:attribute name="zipSearchLayout"  type="IdType" />
    <xs:attribute name="zipSearchView"    type="IdType" />
    <xs:attribute name="zipSearchOption"  type="IdType" />
    <xs:attribute name="zipSuggestions"   type="XeSuggestionsType" />
    <xs:attribute name="zipShadowTitle"   type="TitleType" />
<!--     <xs:attribute name="zipPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="cityField_ag">
    <xs:attribute name="citySource"       type="XFieldName" />
    <xs:attribute name="cityOpen"         type="XOpenType" />
    <xs:attribute name="cityMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="citySearchLayout" type="IdType" />
    <xs:attribute name="citySearchView"   type="IdType" />
    <xs:attribute name="citySearchOption" type="IdType" />
    <xs:attribute name="citySuggestions"  type="XeSuggestionsType" />
    <xs:attribute name="cityShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="cityPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="periodField_ag">
    <xs:attribute name="periodSource"       type="XFieldName" />
    <xs:attribute name="periodMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="periodSize"         type="XeSizeType" />
    <xs:attribute name="periodOpen"         type="XOpenType" />
    <xs:attribute name="periodShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="periodPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="yearField_ag">
    <xs:attribute name="yearSource"       type="XFieldName" />
    <xs:attribute name="yearMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="yearOpen"         type="XOpenType" />
    <xs:attribute name="yearSize"         type="XeSizeType" />
    <xs:attribute name="yearShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="yearPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="keyField_ag">
    <xs:attribute name="keySource"        type="XFieldName" />
    <xs:attribute name="keyMandatory"     type="XBooleanExpressionType" />
    <xs:attribute name="keyOpen"          type="XOpenType" />
    <xs:attribute name="keySize"          type="XeSizeType" />
    <xs:attribute name="keySearchLayout"  type="IdType" />
    <xs:attribute name="keySearchView"    type="IdType" />
    <xs:attribute name="keySearchOption"  type="IdType" />
    <xs:attribute name="keySuggestions"   type="XeSuggestionsType" />
    <xs:attribute name="keyShadowTitle"   type="TitleType" />
<!--     <xs:attribute name="keyPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="descriptionField_ag">
    <xs:attribute name="descriptionSource"        type="XFieldName" />
    <xs:attribute name="descriptionMandatory"     type="XBooleanExpressionType" />
    <xs:attribute name="descriptionOpen"          type="XOpenType" />
    <xs:attribute name="descriptionSize"          type="XeSizeType" />
    <xs:attribute name="descriptionSearchLayout"  type="IdType" />
    <xs:attribute name="descriptionSearchView"    type="IdType" />
    <xs:attribute name="descriptionSearchOption"  type="IdType" />
    <xs:attribute name="descriptionSuggestions"   type="XeSuggestionsType" />
    <xs:attribute name="descriptionShadowTitle"   type="TitleType" />
<!--     <xs:attribute name="descriptionPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="firstPeriodField_ag">
    <xs:attribute name="firstPeriodSource"      type="XFieldName" />
    <xs:attribute name="firstPeriodMandatory"   type="XBooleanExpressionType" />
    <xs:attribute name="firstPeriodOpen"        type="XOpenType" />
    <xs:attribute name="firstPeriodSize"        type="XeSizeType" />
    <xs:attribute name="firstPeriodShadowTitle" type="TitleType" />
<!--     <xs:attribute name="firstPeriodPostTrigger" type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="lastPeriodField_ag">
    <xs:attribute name="lastPeriodSource"       type="XFieldName" />
    <xs:attribute name="lastPeriodMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="lastPeriodOpen"         type="XOpenType" />
    <xs:attribute name="lastPeriodSize"         type="XeSizeType" />
    <xs:attribute name="lastPeriodShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="lastPeriodPostTrigger"  type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="firstYearField_ag">
    <xs:attribute name="firstYearSource"      type="XFieldName" />
    <xs:attribute name="firstYearMandatory"   type="XBooleanExpressionType" />
    <xs:attribute name="firstYearOpen"        type="XOpenType" />
    <xs:attribute name="firstYearSize"        type="XeSizeType" />
    <xs:attribute name="firstYearShadowTitle" type="TitleType" />
<!--     <xs:attribute name="firstYearPostTrigger" type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="lastYearField_ag">
    <xs:attribute name="lastYearSource"       type="XFieldName" />
    <xs:attribute name="lastYearMandatory"    type="XBooleanExpressionType" />
    <xs:attribute name="lastYearOpen"         type="XOpenType" />
    <xs:attribute name="lastYearSize"         type="XeSizeType" />
    <xs:attribute name="lastYearShadowTitle"  type="TitleType" />
<!--     <xs:attribute name="lastYearPostTrigger"   type="IdType" /> -->
  </xs:attributeGroup>

  <xs:attributeGroup name="foreignKeySearch_ag">
    <xs:attribute name="searchLayout" type="IdType" />
    <xs:attribute name="searchView"   type="IdType" />
    <xs:attribute name="searchOption" type="IdType" />
    <xs:attribute name="suggestions"  type="XeSuggestionsType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="elementTitle_ag">
    <xs:attribute name="title"        type="TitleType" />
    <xs:attribute name="titleValue"   type="XFieldName" />
    <xs:attribute name="titleSource"  type="XFieldName" />
  </xs:attributeGroup>

  <xs:attributeGroup name="frameAttr_ag">
    <xs:attribute name="frame" type="BooleanType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="groupCommon_ag">
    <xs:attribute name="open" type="XOpenType" />
    <xs:attributeGroup ref="frameAttr_ag" />
  </xs:attributeGroup>
  
  <xs:attributeGroup name="rwBasics_ag">
    <xs:attribute name="name" type="IdType" />
    <xs:attributeGroup ref="groupCommon_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="titledBasics_ag">
    <xs:attribute name="name"   type="IdType" />
    <xs:attribute name="title"  type="TitleType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="row_ag">
    <xs:attributeGroup ref="rwBasics_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="column_ag">
    <xs:attributeGroup ref="row_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="groupAttr_ag">
    <xs:attributeGroup ref="column_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="elementBasics_ag">
    <xs:attribute name="name"       type="IdType" />
    <xs:attribute name="mandatory"  type="XBooleanExpressionType" />
    <xs:attribute name="open"       type="XOpenType" />
    <xs:attribute name="size"       type="XeSizeType" />
    <xs:attribute name="autoSubmit" type="BooleanType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="fixedElementBasics_ag">
    <xs:attribute name="appearance" type="XeElementAppearance" default="normal" />
    <xs:attributeGroup ref="frameAttr_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="roPaneInstance_ag">
    <xs:attributeGroup ref="titledBasics_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="rwPaneInstance_ag">
    <xs:attributeGroup ref="roPaneInstance_ag" />
    <xs:attributeGroup ref="groupCommon_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="roPaneBasics_ag">
    <xs:attribute name="title" type="TitleType" />
    <xs:attribute name="style" type="XInvocationListType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="rwPaneBasics_ag">
    <xs:attributeGroup ref="roPaneBasics_ag" />
    <xs:attributeGroup ref="groupCommon_ag" />
  </xs:attributeGroup>

  <xs:attributeGroup name="layout_ag">
    <xs:attributeGroup ref="titledBasics_ag" />
    <xs:attribute name="source" type="IdType" use="required" />
    <xs:attribute name="style"  type="XInvocationListType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="link_ag">
    <xs:attribute name="action"       type="QualifiedIdType"/>
    <xs:attribute name="template"     type="XPlaceholderStringType" />
    <xs:attribute name="arguments"    type="XExpressionListType"    />
    <xs:attribute name="tooltip"      type="TitleType" />
    <xs:attribute name="url"          type="XUrlType" />
    <xs:attribute name="icon"         type="XResourceIdType" />
    <xs:attribute name="iconPosition" type="XeIconPositionType" />
    <xs:attribute name="disabled"     type="BooleanType" />
    <xs:attribute name="workspace"   type="IdType" />
  </xs:attributeGroup>

  <xs:attributeGroup name="link_alternative_ag">
    <xs:attribute name="name"       type="IdType"           use="prohibited" />
    <xs:attribute name="visibility" type="XeVisibilityType" use="prohibited" />
  </xs:attributeGroup>

  <!-- **************************************************************************** -->
  <!-- ****************************   SIMPLE TYPES   ****************************** -->
  <!-- **************************************************************************** -->

  <xs:simpleType name="XQueryFieldType">
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  
  <xs:simpleType name="XeActionAppearance">
    <xs:restriction base="xs:token">
      <xs:enumeration value="standard" />
      <xs:enumeration value="all" />
      <xs:enumeration value="title" />
      <xs:enumeration value="icon" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="XeElementAppearance">
    <xs:restriction base="xs:token">
      <xs:enumeration value="standard" />
      <xs:enumeration value="normal" />
      <xs:enumeration value="maximized" />
      <xs:enumeration value="unaligned" />
      <xs:enumeration value="interval" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XSeparatorType">
    <!-- restrictions could be added -->
    <xs:restriction base="xs:string" />
  </xs:simpleType>
  <!--
    NOTE: it is not possible to create a list that contains a list, therefore there are not restrictions in the xsd about the two to four possible
    elements that the spain pair list may contain, this is checked during the execution of the program
  -->

  <xs:simpleType name="XOpenType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="false" />
          <xs:enumeration value="never" />
          <xs:enumeration value="create" />
          <xs:enumeration value="update" />
          <xs:enumeration value="always" />
          <xs:enumeration value="true" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="XBooleanExpressionType" />
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="XUnitPositionType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="standard" />
      <xs:enumeration value="prefix" />
      <xs:enumeration value="postfix" />
      <xs:enumeration value="currency" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XFormatType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="standard" />
      <xs:enumeration value="normal" />
      <xs:enumeration value="full" />
      <xs:enumeration value="slim" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XAnchorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="standard" />
      <xs:enumeration value="left" />
      <xs:enumeration value="center" />
      <xs:enumeration value="right" />
      <xs:enumeration value="both" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XColor">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:token">
          <xs:enumeration value="standard" />
          <xs:enumeration value="red" />
          <xs:enumeration value="lime" />
          <xs:enumeration value="blue" />
          <xs:enumeration value="yellow" />
          <xs:enumeration value="aqua" />
          <xs:enumeration value="fuchsia" />
          <xs:enumeration value="black" />
          <xs:enumeration value="white" />
          <xs:enumeration value="gray" />
          <xs:enumeration value="green" />
          <xs:enumeration value="maroon" />
          <xs:enumeration value="navy" />
          <xs:enumeration value="purple" />
          <xs:enumeration value="silver" />
          <xs:enumeration value="olive" />
          <xs:enumeration value="teal" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="rgb=((#[0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])|(([0-9])+,([0-9])+,([0-9])+))" />
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="XBooleanWithStandardType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="standard" />
          <xs:enumeration value="false" />
          <xs:enumeration value="true" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:boolean" />
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="XIntegerStandardType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="standard" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:decimal" />
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="XPositiveIntegerWithStandardType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="standard" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="XPositiveIntegerType" />
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="XeRowHeight">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="standard" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="XPositiveIntegerType">
          <xs:enumeration value="2" />
          <xs:enumeration value="3" />
          <xs:enumeration value="4" />
          <xs:enumeration value="5" />
          <xs:enumeration value="10" />
          <xs:enumeration value="15" />
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="XeRowHeightMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="standard" />
      <xs:enumeration value="singleLine" />
      <xs:enumeration value="fitToContents" />
      <xs:enumeration value="allMultiline" />
      <xs:enumeration value="selectedMultiline" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XJustificationType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="standard" />
      <xs:enumeration value="left" />
      <xs:enumeration value="center" />
      <xs:enumeration value="right" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XeIconPositionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="prefix" />
      <xs:enumeration value="postfix" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="XeSwitchType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="calendar" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XeGroupedType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="always" />
      <xs:enumeration value="dynamic" />
      <xs:enumeration value="never" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="XReportFieldType">
    <xs:restriction base="xs:string">
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XeReportOutputType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="html" />
      <xs:enumeration value="pdf" />
      <xs:enumeration value="xls" />
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="XUrlType">
    <xs:restriction base="XStringExpressionType"/>
  </xs:simpleType>

  <xs:simpleType name="XeVisibilityType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="standard" />
      <xs:enumeration value="visible" />
      <xs:enumeration value="hidden" />
      <xs:enumeration value="required" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="XGridCells">
    <xs:restriction base="xs:normalizedString" />
  </xs:simpleType>
  
  <xs:simpleType name="XStyleList">
  	<xs:restriction base="xs:string" />
  </xs:simpleType>
  
  <xs:simpleType name="XeGuiType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="standard" />
      <xs:enumeration value="timeDuration" />      
    </xs:restriction>
  </xs:simpleType>
      
  <xs:simpleType name="XeCustomWidgetSource">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DialChartWidget" />
      <xs:enumeration value="BarChartWidget" />
      <xs:enumeration value="PieChartWidget" />      
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="XeOrientation">
    <xs:restriction base="xs:string">
    	<xs:enumeration value="horizontal" />
      <xs:enumeration value="vertical" />           
    </xs:restriction>
  </xs:simpleType>
  
  <!-- **************************************************************************** -->
  <!-- ****************************      PALETTE     ****************************** -->
  <!-- **************************************************************************** -->
  
  <xs:group name="paletteUse_g">
    <xs:sequence>
    	<xs:element name="Palette" type="XPaletteUse" minOccurs="0" >    	
        <xs:annotation>
          <xs:appinfo>
            <jxb:property name="paletteElement" />
          </xs:appinfo>
        </xs:annotation>
      </xs:element>
    </xs:sequence>    
  </xs:group>
  
  <xs:complexType name="XPaletteUse">
  	<xs:complexContent>
			<xs:restriction base="XPalette">
				<xs:group ref="paletteContent_g" /> 
				<xs:attribute name="name" type="IdType" use="prohibited" />
				<xs:attribute name="ref" type="IdType" use="optional" />				
			</xs:restriction> 
		</xs:complexContent>                       
  </xs:complexType>

	<xs:complexType name="XPaletteDefinition">
		<xs:complexContent>
			<xs:restriction base="XPalette">
				<xs:group ref="paletteContent_g" /> 
				<xs:attribute name="name" type="IdType" use="required" />
				<xs:attribute name="ref" type="IdType" use="prohibited" />
			</xs:restriction>			
		</xs:complexContent>		               
  </xs:complexType>
  
  <xs:complexType name="XPalette" abstract="true">    		  
     <xs:group ref="paletteContent_g" />       
     <xs:attribute name="name" type="IdType" />
		 <xs:attribute name="ref" type="IdType" />
		 <xs:attribute name="style" type="XStyleList" />
  </xs:complexType> 
    
  <xs:group name="paletteContent_g">
    <xs:choice>
    	<xs:element name="Style" type="XStyle" minOccurs="0" maxOccurs="unbounded" >    		
    		<xs:annotation>
          <xs:appinfo>
            <jxb:property name="styleElement" />
          </xs:appinfo>
        </xs:annotation>
    	</xs:element>
    </xs:choice>  
  </xs:group>
  
  <!-- **************************************************************************** -->
  <!-- ****************************    DATA SOURCE   ****************************** -->
  <!-- **************************************************************************** -->
  
 <xs:group name="dataSourceDefinition_g">
    <xs:choice>
      <xs:element name="DataSource" type="XDataSourceDefinition" /> 
    </xs:choice>
  </xs:group>
  
  	<xs:complexType name="XDataSourceDefinition">
		<xs:complexContent>
			<xs:restriction base="XDataSource">
				<xs:group ref="dataSourceContent_g" /> 
				<xs:attribute name="name" type="IdType" use="required" />
				<xs:attribute name="ref" type="IdType" use="prohibited" />
			</xs:restriction>			
		</xs:complexContent>		               
  </xs:complexType>
    	
  <xs:complexType name="XDataSource">    		  
     <xs:group ref="dataSourceContent_g" />       
     <xs:attribute name="name" type="IdType" />
		 <xs:attribute name="ref" type="IdType" />		 
  </xs:complexType> 
    
  <xs:group name="dataSourceContent_g">
    <xs:choice>
    	<xs:element name="Base" type="XDataSourceBase" minOccurs="0" />    		    		
    </xs:choice>  
  </xs:group>
  
  <xs:complexType name="XDataSourceBase">    		  
    <xs:choice>
    	<xs:element name="Category" type="XDataSourceCategory" />    		    		
    </xs:choice>     
    <xs:attribute name="legends" type="XExpressionListType" use="required" />    
  </xs:complexType> 
  
  <xs:complexType name="XDataSourceCategory">    		  
    <xs:choice>
    	<xs:element name="Series" type="XDataSourceSeries" maxOccurs="unbounded" />    		    		
    </xs:choice>  
    <xs:attribute name="legends" type="XExpressionListType" use="required" />
  </xs:complexType> 
           
  <xs:complexType name="XDataSourceSeries">    
    <xs:attribute name="values" type="XExpressionListType" use="required" />                
  </xs:complexType>    		    		
    
</xs:schema>
